catalog_schema:
  {
    'mydb': {
      'foo': {
        'bsonType': "object",
        'required': [ '_id', 'a' ],
        'additionalProperties': false,
        'properties': {
          '_id': { 'bsonType': "int" },
          'a': {
            'bsonType': "object",
            'required': [ 'b' ],
            'additionalProperties': false,
            'properties': {
              'b': {
                'bsonType': "object",
                'required': [ 'c' ],
                'additionalProperties': false,
                'properties': {
                  'c': { 'bsonType': "int" },
                }
              },
            }
          },
        }
      },
      'docOrInt': {
        'bsonType': "object",
        'required': [ '_id', 'a' ],
        'additionalProperties': false,
        'properties': {
          '_id': { 'bsonType': "int" },
          'a': {
            'anyOf':
              [
                { 'bsonType': 'int' },
                {
                  'bsonType': "object",
                  'required': [ 'b' ],
                  'additionalProperties': false,
                  'properties': {
                    'b': { 'bsonType': "int" }
                  }
                }
              ]
          },
        }
      },
      'nullableDoc': {
        'bsonType': "object",
        'required': [ '_id'],
        'additionalProperties': false,
        'properties': {
          '_id': { 'bsonType': "int" },
          'a': {
            'anyOf':
              [
                { 'bsonType': 'null' },
                {
                  'bsonType': "object",
                  'required': [ 'b' ],
                  'additionalProperties': false,
                  'properties': {
                    'b': { 'bsonType': "int" }
                  }
                }
              ]
          },
        }
      },
      'mustCollide': {
        'bsonType': "object",
        'required': [ '_id', 'a' ],
        'additionalProperties': false,
        'properties': {
          '_id': { 'bsonType': "int" },
          'a': {
            'bsonType': "object",
            'required': [ 'b' ],
            'additionalProperties': false,
            'properties': {
              'b': { 'bsonType': "int" },
            }
          },
          'a_b': { 'bsonType': "int" }
        }
      },
      'mayCollide': {
        'bsonType': "object",
        'required': [ '_id', 'a' ],
        'additionalProperties': true,
        'properties': {
          '_id': { 'bsonType': "int" },
          'a': {
            'bsonType': "object",
            'required': [ 'b' ],
            'additionalProperties': false,
            'properties': {
              'b': { 'bsonType': "int" },
            }
          }
        }
      },
      'noSchemaInfo': {
        'bsonType': "object",
        'additionalProperties': true
      }
    },
  }

tests:
  - description: basic correctness test
    current_db: mydb
    query: "SELECT * FROM FLATTEN(foo)"
    result:
      - { 'foo': { '_id': 0, 'a_b_c': 1 } }

  - description: datasource argument can optionally include an alias
    current_db: mydb
    query: "SELECT * FROM FLATTEN(foo as f)"
    result:
      - { 'f': { '_id': 0, 'a_b_c': 1 } }

  - description: basic correctness test for user-specified separator
    current_db: mydb
    query: "SELECT * FROM FLATTEN(foo WITH separator => ':') "
    result:
      - { 'foo': { '_id': 0, 'a:b:c': 1 } }

  - description: user-specified separator with length less than one is allowed
    current_db: mydb
    query: "SELECT * FROM FLATTEN(foo WITH separator => '') "
    result:
      - { 'foo': { '_id': 0, 'abc': 1 } }

  - description: user-specified separator with length greater than one is allowed
    current_db: mydb
    query: "SELECT * FROM FLATTEN(foo WITH separator => '_DOT_') "
    result:
      - { 'foo': { '_id': 0, 'a_DOT_b_DOT_c': 1 } }

  - description: a user-specified depth greater than max nesting depth causes all documents to be flattened
    current_db: mydb
    query: "SELECT * FROM FLATTEN(foo WITH depth => 5)"
    result:
      - { 'foo': { '_id': 0, 'a_b_c': 1 } }

  - description: a user-specified depth less than max nesting depth causes more deeply nested documents to remain unflattened
    current_db: mydb
    query: "SELECT * FROM FLATTEN(foo WITH depth => 1)"
    result:
      - { 'foo': { '_id': 0, 'a_b': { 'c': 1 } } }

  - description: user-specified depth must be an integer literal
    current_db: mydb
    query: "SELECT * FROM FLATTEN(foo WITH depth => 1.2)"
    parse_error: "Unrecognized token: `1.2`"

  - description: user-specified separator must be a string literal
    current_db: mydb
    query: "SELECT * FROM FLATTEN(foo WITH separator => 1)"
    parse_error: "Unrecognized token: `1`"

  - description: error on unknown option keys
    current_db: mydb
    query: "SELECT * FROM FLATTEN(foo WITH INVALID => a)"
    parse_error: "Unrecognized token: `INVALID`"

  - description: flatten polymorphic objects with just null or missing polymorphism
    current_db: mydb
    query: "SELECT * FROM FLATTEN(nullableDoc)"
    result:
      - { 'nullableDoc': { '_id': 0, 'a_b': 0 } }
      - { 'nullableDoc': { '_id': 1, 'a_b': 1 } }
      - { 'nullableDoc': { '_id': 2} }
      - { 'nullableDoc': { '_id': 3} }

  - description: FLATTENing a FLATTENed datasource is allowed
    current_db: mydb
    query: "SELECT * FROM FLATTEN(FLATTEN(foo))"
    result:
      - { 'foo': { '_id': 0, 'a_b_c': 1 } }


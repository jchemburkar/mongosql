catalog_schema:
  db:
      null_and_missing:
          bsonType: 'object'
          additionalProperties: false
          required: ['_id']
          properties:
              '_id': {'bsonType': 'int'}
              x: {'anyOf': [{'bsonType': 'bool'}, {'bsonType': 'null'}]}

      missing:
          bsonType: 'object'
          additionalProperties: false
          required: ['_id']
          properties:
              '_id': {'bsonType': 'int'}
              x: {'bsonType': 'bool'}

tests:
- description: IS NULL covers missing fields
  current_db: db
  "pipeline": [
    {
      "$match": {
        "x": {
          "$eq": null
        }
      }
    }, 
    {
      "$project": {
        "null_and_missing": "$$ROOT", 
        "_id": 0
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      null_and_missing:
        bsonType: object
        properties:
          _id: {bsonType: int}
          x: {bsonType: 'null'}
        required: [_id]
        additionalProperties: false
    required: [_id, null_and_missing]
    additionalProperties: false
- description: IS NOT NULL covers missing fields
  current_db: db
  "pipeline": [
    {
      "$match": {
        "$expr": {
          "$not": [
            {
              "$or": [
                {
                  "$eq": [
                    {
                      "$type": [
                        "$x"
                      ]
                    }, 
                    {
                      "$literal": "null"
                    }
                  ]
                }, 
                {
                  "$eq": [
                    {
                      "$type": [
                        "$x"
                      ]
                    }, 
                    {
                      "$literal": "missing"
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    }, 
    {
      "$project": {
        "null_and_missing": "$$ROOT", 
        "_id": 0
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      null_and_missing:
        bsonType: object
        properties:
          _id: {bsonType: int}
          x: {bsonType: bool}
        required: [_id, x]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: [_id, null_and_missing]
    additionalProperties: false
- description: IS NULL covers missing fields without null schema
  current_db: db
  "pipeline": [
    {
      "$match": {
        "x": {
          "$eq": null
        }
      }
    }, 
    {
      "$project": {
        "_id": 0, 
        "missing": "$$ROOT"
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      missing:
        bsonType: object
        properties:
          _id: {bsonType: int}
        required: [_id]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: [_id, missing]
    additionalProperties: false

catalog_schema:
  {
    'foo': {
      'doubles': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'strings': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'documents': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'arrays': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'bindatum': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'objectIDs': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'bools': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'dates': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'nullAndMissing': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'ints': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'longs': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'decimals': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'invalidSourceTypes': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
    }
  }

tests:
- description: Cast DOUBLE to BOOL
  current_db: foo
  pipeline:
  - $project:
      doubles: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $doubles.v
        asBool:
          $convert:
            input: $doubles.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asBool: {bsonType: bool}
          v: {bsonType: double}
        required: [asBool, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast STRING to BOOL
  current_db: foo
  pipeline:
  - $project:
      strings: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $strings.v
        asBool:
          $convert:
            input: $strings.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: string}
          asBool: {bsonType: bool}
        required: [asBool, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DOCUMENT to BOOL
  current_db: foo
  type_compare: true
  pipeline:
  - $project:
      documents: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $documents.v
        asBool:
          $convert:
            input: $documents.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v:
            bsonType: object
            properties:
              a: {bsonType: int}
              b: {bsonType: int}
            additionalProperties: false
          asBool: {bsonType: bool}
        required: [asBool, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast ARRAY to BOOL
  current_db: foo
  pipeline:
  - $project:
      arrays: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $arrays.v
        asBool:
          $convert:
            input: $arrays.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v:
            bsonType: array
            items: {bsonType: int}
          asBool: {bsonType: bool}
        required: [asBool, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast OBJECTID to BOOL
  current_db: foo
  pipeline:
  - $project:
      objectIDs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $objectIDs.v
        asBool:
          $convert:
            input: $objectIDs.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: objectId}
          asBool: {bsonType: bool}
        required: [asBool, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast BOOL to BOOL
  current_db: foo
  pipeline:
  - $project:
      bools: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bools.v
        asBool:
          $convert:
            input: $bools.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot

  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: bool}
          asBool: {bsonType: bool}
        required: [asBool, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast BSON_DATE to BOOL
  current_db: foo
  pipeline:
  - $project:
      dates: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $dates.v
        asBool:
          $convert:
            input: $dates.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$date: {$numberLong: '0'}}, asBool: true}}
  - {'': {v: {$date: {$numberLong: '253402300799999'}}, asBool: true}}
  - {'': {v: {$date: {$numberLong: '-62135596800000'}}, asBool: true}}

- description: Cast NULL and MISSING to BOOL, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline:
  - $project:
      nullAndMissing: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $nullAndMissing.v
        asBoolDefault:
          $convert:
            input: $nullAndMissing.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
        asBoolOnNull:
          $convert:
            input: $nullAndMissing.v
            to: bool
            onNull:
              $literal: 'null'
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asBoolOnNull: {bsonType: string}
          v: {bsonType: 'null'}
          asBoolDefault: {bsonType: 'null'}
        required: [asBoolDefault, asBoolOnNull]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast INT to BOOL
  current_db: foo
  pipeline:
  - $project:
      ints: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $ints.v
        asBool:
          $convert:
            input: $ints.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: int}
          asBool: {bsonType: bool}
        required: [asBool, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast LONG to BOOL
  current_db: foo
  pipeline:
  - $project:
      longs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $longs.v
        asBool:
          $convert:
            input: $longs.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: long}
          asBool: {bsonType: bool}
        required: [asBool, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DECIMAL to BOOL
  current_db: foo
  pipeline:
  - $project:
      decimals: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $decimals.v
        asBool:
          $convert:
            input: $decimals.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: decimal}
          asBool: {bsonType: bool}
        required: [asBool, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast invalid source types to BOOL returns True
  current_db: foo
  pipeline:
  - $project:
      invalidSourceTypes: $$ROOT
      _id: 0
  - $project:
      __bot:
        type: $invalidSourceTypes.type
        asBool:
          $convert:
            input: $invalidSourceTypes.v
            to: bool
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          asBool:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: bool}
        required: [asBool, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DOUBLE to INT, out of range numbers are invalid and return NULL
  current_db: foo
  pipeline:
  - $project:
      doubles: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $doubles.v
        asInt:
          $convert:
            input: $doubles.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asInt:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
          v: {bsonType: double}
        required: [asInt, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast STRING to INT, non-numbers, non-ints, and out of range numbers
    are invalid and return NULL
  current_db: foo
  pipeline:
  - $project:
      strings: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $strings.v
        asInt:
          $convert:
            input: $strings.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asInt:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
          v: {bsonType: string}
        required: [asInt, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DOCUMENT to INT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      documents: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $documents.v
        asIntDefault:
          $convert:
            input: $documents.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
        asIntOnError:
          $convert:
            input: $documents.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v:
            bsonType: object
            properties:
              a: {bsonType: int}
              b: {bsonType: int}
            additionalProperties: false
          asIntDefault: {bsonType: 'null'}
          asIntOnError: {bsonType: string}
        required: [asIntDefault, asIntOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast ARRAY to INT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      arrays: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $arrays.v
        asIntDefault:
          $convert:
            input: $arrays.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
        asIntOnError:
          $convert:
            input: $arrays.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asIntOnError: {bsonType: string}
          v:
            bsonType: array
            items: {bsonType: int}
          asIntDefault: {bsonType: 'null'}
        required: [asIntDefault, asIntOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast OBJECTID to INT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      objectIDs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $objectIDs.v
        asIntDefault:
          $convert:
            input: $objectIDs.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
        asIntOnError:
          $convert:
            input: $objectIDs.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asIntDefault: {bsonType: 'null'}
          asIntOnError: {bsonType: string}
          v: {bsonType: objectId}
        required: [asIntDefault, asIntOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast BOOL to INT
  current_db: foo
  pipeline:
  - $project:
      bools: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bools.v
        asInt:
          $convert:
            input: $bools.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: bool}
          asInt: {bsonType: int}
        required: [asInt, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast BSON_DATE to INT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      dates: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $dates.v
        asIntDefault:
          $convert:
            input: $dates.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
        asIntOnError:
          $convert:
            input: $dates.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$date: {$numberLong: '0'}}, asIntDefault: null, asIntOnError: !!str 'null'}}
  - {'': {v: {$date: {$numberLong: '253402300799999'}}, asIntDefault: null, asIntOnError: !!str 'null'}}
  - {'': {v: {$date: {$numberLong: '-62135596800000'}}, asIntDefault: null, asIntOnError: !!str 'null'}}

- description: Cast NULL and MISSING to INT, returns NULL by default and ON NULL when
    set
  current_db: foo
  pipeline:
  - $project:
      nullAndMissing: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $nullAndMissing.v
        asIntDefault:
          $convert:
            input: $nullAndMissing.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
        asIntOnNull:
          $convert:
            input: $nullAndMissing.v
            to: int
            onNull:
              $literal: 'null'
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asIntOnNull: {bsonType: string}
          v: {bsonType: 'null'}
          asIntDefault: {bsonType: 'null'}
        required: [asIntDefault, asIntOnNull]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast INT to INT
  current_db: foo
  pipeline:
  - $project:
      ints: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $ints.v
        asInt:
          $convert:
            input: $ints.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: int}
          asInt: {bsonType: int}
        required: [asInt, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast LONG to INT, out of range numbers are invalid and return NULL
  current_db: foo
  pipeline:
  - $project:
      longs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $longs.v
        asInt:
          $convert:
            input: $longs.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: long}
          asInt:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
        required: [asInt, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DECIMAL to INT, out of range numbers are invalid and return NULL
  current_db: foo
  pipeline:
  - $project:
      decimals: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $decimals.v
        asInt:
          $convert:
            input: $decimals.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asInt:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
          v: {bsonType: decimal}
        required: [asInt, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast invalid source types to INT
  current_db: foo
  pipeline:
  - $project:
      invalidSourceTypes: $$ROOT
      _id: 0
  - $project:
      __bot:
        type: $invalidSourceTypes.type
        asInt:
          $convert:
            input: $invalidSourceTypes.v
            to: int
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          asInt: {bsonType: 'null'}
        required: [asInt, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DOUBLE to DECIMAL
  current_db: foo
  pipeline:
  - $project:
      doubles: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $doubles.v
        asDecimal:
          $convert:
            input: $doubles.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: double}
          asDecimal: {bsonType: decimal}
        required: [asDecimal, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast STRING to DECIMAL, non-numbers return NULL
  current_db: foo
  pipeline:
  - $project:
      strings: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $strings.v
        asDecimal:
          $convert:
            input: $strings.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDecimal:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: decimal}
          v: {bsonType: string}
        required: [asDecimal, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DOCUMENT to DECIMAL is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      documents: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $documents.v
        asDecimalDefault:
          $convert:
            input: $documents.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
        asDecimalOnError:
          $convert:
            input: $documents.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDecimalDefault: {bsonType: 'null'}
          v:
            bsonType: object
            properties:
              a: {bsonType: int}
              b: {bsonType: int}
            additionalProperties: false
          asDecimalOnError: {bsonType: string}
        required: [asDecimalDefault, asDecimalOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast ARRAY to DECIMAL is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      arrays: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $arrays.v
        asDecimalDefault:
          $convert:
            input: $arrays.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
        asDecimalOnError:
          $convert:
            input: $arrays.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asDecimalOnError: {bsonType: string}
          v:
            bsonType: array
            items: {bsonType: int}
          asDecimalDefault: {bsonType: 'null'}
        required: [asDecimalDefault, asDecimalOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast OBJECTID to DECIMAL is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      objectIDs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $objectIDs.v
        asDecimalDefault:
          $convert:
            input: $objectIDs.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
        asDecimalOnError:
          $convert:
            input: $objectIDs.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDecimalDefault: {bsonType: 'null'}
          asDecimalOnError: {bsonType: string}
          v: {bsonType: objectId}
        required: [asDecimalDefault, asDecimalOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast BOOL to DECIMAL
  current_db: foo
  pipeline:
  - $project:
      bools: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bools.v
        asDecimal:
          $convert:
            input: $bools.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asDecimal: {bsonType: decimal}
          v: {bsonType: bool}
        required: [asDecimal, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast BSON_DATE to DECIMAL
  current_db: foo
  pipeline:
  - $project:
      dates: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $dates.v
        asDecimal:
          $convert:
            input: $dates.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$date: {$numberLong: '0'}}, asDecimal: {$numberDecimal: '0'}}}
  - {'': {v: {$date: {$numberLong: '253402300799999'}}, asDecimal: {$numberDecimal: '253402300799999'}}}
  - {'': {v: {$date: {$numberLong: '-62135596800000'}}, asDecimal: {$numberDecimal: '-62135596800000'}}}

- description: Cast NULL and MISSING to DECIMAL, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline:
  - $project:
      nullAndMissing: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $nullAndMissing.v
        asDecimalDefault:
          $convert:
            input: $nullAndMissing.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
        asDecimalOnNull:
          $convert:
            input: $nullAndMissing.v
            to: decimal
            onNull:
              $literal: 'null'
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: 'null'}
          asDecimalOnNull: {bsonType: string}
          asDecimalDefault: {bsonType: 'null'}
        required: [asDecimalDefault, asDecimalOnNull]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast INT to DECIMAL
  current_db: foo
  pipeline:
  - $project:
      ints: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $ints.v
        asDecimal:
          $convert:
            input: $ints.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: int}
          asDecimal: {bsonType: decimal}
        required: [asDecimal, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast LONG to DECIMAL
  current_db: foo
  pipeline:
  - $project:
      longs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $longs.v
        asDecimal:
          $convert:
            input: $longs.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: long}
          asDecimal: {bsonType: decimal}
        required: [asDecimal, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DECIMAL to DECIMAL
  current_db: foo
  pipeline:
  - $project:
      decimals: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $decimals.v
        asDecimal:
          $convert:
            input: $decimals.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: decimal}
          asDecimal: {bsonType: decimal}
        required: [asDecimal, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast invalid source types to DECIMAL
  current_db: foo
  pipeline:
  - $project:
      invalidSourceTypes: $$ROOT
      _id: 0
  - $project:
      __bot:
        type: $invalidSourceTypes.type
        asDecimal:
          $convert:
            input: $invalidSourceTypes.v
            to: decimal
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDecimal: {bsonType: 'null'}
          type: {bsonType: string}
        required: [asDecimal, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DOUBLE to DOUBLE
  current_db: foo
  pipeline:
  - $project:
      doubles: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $doubles.v
        asDouble:
          $convert:
            input: $doubles.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: double}
          asDouble: {bsonType: double}
        required: [asDouble, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast STRING to DOUBLE, non-numbers and out of range numbers are invalid
    and return NULL
  current_db: foo
  pipeline:
  - $project:
      strings: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $strings.v
        asDouble:
          $convert:
            input: $strings.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asDouble:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: double}
          v: {bsonType: string}
        required: [asDouble, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DOCUMENT to DOUBLE is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      documents: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $documents.v
        asDoubleDefault:
          $convert:
            input: $documents.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
        asDoubleOnError:
          $convert:
            input: $documents.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v:
            bsonType: object
            properties:
              b: {bsonType: int}
              a: {bsonType: int}
            additionalProperties: false
          asDoubleDefault: {bsonType: 'null'}
          asDoubleOnError: {bsonType: string}
        required: [asDoubleDefault, asDoubleOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast ARRAY to DOUBLE is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      arrays: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $arrays.v
        asDoubleDefault:
          $convert:
            input: $arrays.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
        asDoubleOnError:
          $convert:
            input: $arrays.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDoubleDefault: {bsonType: 'null'}
          v:
            bsonType: array
            items: {bsonType: int}
          asDoubleOnError: {bsonType: string}
        required: [asDoubleDefault, asDoubleOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast OBJECTID to DOUBLE is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      objectIDs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $objectIDs.v
        asDoubleDefault:
          $convert:
            input: $objectIDs.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
        asDoubleOnError:
          $convert:
            input: $objectIDs.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDoubleDefault: {bsonType: 'null'}
          asDoubleOnError: {bsonType: string}
          v: {bsonType: objectId}
        required: [asDoubleDefault, asDoubleOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast BOOL to DOUBLE
  current_db: foo
  pipeline:
  - $project:
      bools: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bools.v
        asDouble:
          $convert:
            input: $bools.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: bool}
          asDouble: {bsonType: double}
        required: [asDouble, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast BSON_DATE to DOUBLE
  current_db: foo
  pipeline:
  - $project:
      dates: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $dates.v
        asDouble:
          $convert:
            input: $dates.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$date: {$numberLong: '0'}}, asDouble: {$numberDouble: '0'}}}
  - {'': {v: {$date: {$numberLong: '253402300799999'}}, asDouble: {$numberDouble: '253402300799999'}}}
  - {'': {v: {$date: {$numberLong: '-62135596800000'}}, asDouble: {$numberDouble: '-62135596800000'}}}

- description: Cast NULL and MISSING to DOUBLE, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline:
  - $project:
      nullAndMissing: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $nullAndMissing.v
        asDoubleDefault:
          $convert:
            input: $nullAndMissing.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
        asDoubleOnNull:
          $convert:
            input: $nullAndMissing.v
            to: double
            onNull:
              $literal: 'null'
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDoubleOnNull: {bsonType: string}
          asDoubleDefault: {bsonType: 'null'}
          v: {bsonType: 'null'}
        required: [asDoubleDefault, asDoubleOnNull]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast INT to DOUBLE
  current_db: foo
  pipeline:
  - $project:
      ints: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $ints.v
        asDouble:
          $convert:
            input: $ints.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDouble: {bsonType: double}
          v: {bsonType: int}
        required: [asDouble, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast LONG to DOUBLE
  current_db: foo
  pipeline:
  - $project:
      longs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $longs.v
        asDouble:
          $convert:
            input: $longs.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: long}
          asDouble: {bsonType: double}
        required: [asDouble, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DECIMAL to DOUBLE, out of range numbers are invalid and return
    NULL
  current_db: foo
  pipeline:
  - $project:
      decimals: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $decimals.v
        asDouble:
          $convert:
            input: $decimals.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: decimal}
          asDouble:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: double}
        required: [asDouble, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast invalid source types to DOUBLE
  current_db: foo
  pipeline:
  - $project:
      invalidSourceTypes: $$ROOT
      _id: 0
  - $project:
      __bot:
        type: $invalidSourceTypes.type
        asDouble:
          $convert:
            input: $invalidSourceTypes.v
            to: double
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDouble: {bsonType: 'null'}
          type: {bsonType: string}
        required: [asDouble, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DOUBLE to LONG
  current_db: foo
  pipeline:
  - $project:
      doubles: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $doubles.v
        asLong:
          $convert:
            input: $doubles.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: double}
          asLong: {bsonType: long}
        required: [asLong, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast STRING to LONG, non-numbers, non-ints, and out of range numbers
    are invalid and return NULL
  current_db: foo
  pipeline:
  - $project:
      strings: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $strings.v
        asLong:
          $convert:
            input: $strings.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asLong:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: long}
          v: {bsonType: string}
        required: [asLong, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DOCUMENT to LONG is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      documents: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $documents.v
        asLongDefault:
          $convert:
            input: $documents.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
        asLongOnError:
          $convert:
            input: $documents.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v:
            bsonType: object
            properties:
              b: {bsonType: int}
              a: {bsonType: int}
            additionalProperties: false
          asLongDefault: {bsonType: 'null'}
          asLongOnError: {bsonType: string}
        required: [asLongDefault, asLongOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast ARRAY to LONG is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      arrays: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $arrays.v
        asLongDefault:
          $convert:
            input: $arrays.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
        asLongOnError:
          $convert:
            input: $arrays.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v:
            bsonType: array
            items: {bsonType: int}
          asLongDefault: {bsonType: 'null'}
          asLongOnError: {bsonType: string}
        required: [asLongDefault, asLongOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast OBJECTID to LONG is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      objectIDs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $objectIDs.v
        asLongDefault:
          $convert:
            input: $objectIDs.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
        asLongOnError:
          $convert:
            input: $objectIDs.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: objectId}
          asLongDefault: {bsonType: 'null'}
          asLongOnError: {bsonType: string}
        required: [asLongDefault, asLongOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast BOOL to LONG
  current_db: foo
  pipeline:
  - $project:
      bools: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bools.v
        asLong:
          $convert:
            input: $bools.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asLong: {bsonType: long}
          v: {bsonType: bool}
        required: [asLong, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast BSON_DATE to LONG
  current_db: foo
  pipeline:
  - $project:
      dates: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $dates.v
        asLong:
          $convert:
            input: $dates.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$date: {$numberLong: '0'}}, asLong: {$numberLong: '0'}}}
  - {'': {v: {$date: {$numberLong: '253402300799999'}}, asLong: {$numberLong: '253402300799999'}}}
  - {'': {v: {$date: {$numberLong: '-62135596800000'}}, asLong: {$numberLong: '-62135596800000'}}}

- description: Cast NULL and MISSING to LONG, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline:
  - $project:
      nullAndMissing: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $nullAndMissing.v
        asLongDefault:
          $convert:
            input: $nullAndMissing.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
        asLongOnNull:
          $convert:
            input: $nullAndMissing.v
            to: long
            onNull:
              $literal: 'null'
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asLongOnNull: {bsonType: string}
          asLongDefault: {bsonType: 'null'}
          v: {bsonType: 'null'}
        required: [asLongDefault, asLongOnNull]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast INT to LONG
  current_db: foo
  pipeline:
  - $project:
      ints: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $ints.v
        asLong:
          $convert:
            input: $ints.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: int}
          asLong: {bsonType: long}
        required: [asLong, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast LONG to LONG
  current_db: foo
  pipeline:
  - $project:
      longs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $longs.v
        asLong:
          $convert:
            input: $longs.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asLong: {bsonType: long}
          v: {bsonType: long}
        required: [asLong, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DECIMAL to LONG, out of range numbers are invalid and return NULL
  current_db: foo
  pipeline:
  - $project:
      decimals: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $decimals.v
        asLong:
          $convert:
            input: $decimals.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: decimal}
          asLong:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: long}
        required: [asLong, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast invalid source types to LONG
  current_db: foo
  pipeline:
  - $project:
      invalidSourceTypes: $$ROOT
      _id: 0
  - $project:
      __bot:
        type: $invalidSourceTypes.type
        asLong:
          $convert:
            input: $invalidSourceTypes.v
            to: long
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asLong: {bsonType: 'null'}
          type: {bsonType: string}
        required: [asLong, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DOUBLE to BSON_DATE
  current_db: foo
  pipeline:
  - $project:
      doubles: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $doubles.v
        asDate:
          $convert:
            input: $doubles.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$numberDouble: '0'}, asDate: {$date: {$numberLong: '0'}}}}
  - {'': {v: {$numberDouble: '1.9'}, asDate: {$date: {$numberLong: '1'}}}}
  - {'': {v: {$numberDouble: '-2.4'}, asDate: {$date: {$numberLong: '-2'}}}}
  - {'': {v: {$numberDouble: '2147483648.4'}, asDate: {$date: {$numberLong: '2147483648'}}}}
  - {'': {v: {$numberDouble: '-2147483649.7'}, asDate: {$date: {$numberLong: '-2147483649'}}}}

- description: Cast STRING to BSON_DATE, non-dates are invalid and return NULL
  current_db: foo
  pipeline:
  - $project:
      strings: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $strings.v
        asDate:
          $convert:
            input: $strings.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: '', asDate: null}}
  - {'': {v: string, asDate: null}}
  - {'': {v: 'true', asDate: null}}
  - {'': {v: 'false', asDate: null}}
  - {'': {v: '0', asDate: null}}
  - {'': {v: '0.0', asDate: null}}
  - {'': {v: '1', asDate: null}}
  - {'': {v: '-1', asDate: null}}
  - {'': {v: '1.4', asDate: null}}
  - {'': {v: '-1.6', asDate: null}}
  - {'': {v: '2147483648', asDate: null}}
  - {'': {v: '-2147483649', asDate: null}}
  - {'': {v: '9223372036854775808', asDate: null}}
  - {'': {v: '-9223372036854775809', asDate: null}}
  - {'': {v: '5e550', asDate: null}}
  - {'': {v: '2018-03-03', asDate: {$date: {$numberLong: '1520035200000'}}}}
  - {'': {v: 2018-03-20 11:00:06 +0500, asDate: {$date: {$numberLong: '1521525606000'}}}}
  - {'': {v: 5ab9cbfa31c2ab715d42129e, asDate: null}}

- description: Cast DOCUMENT to BSON_DATE is invalid, returns NULL by default and
    ON ERROR when set
  current_db: foo
  pipeline:
  - $project:
      documents: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $documents.v
        asDateDefault:
          $convert:
            input: $documents.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
        asDateOnError:
          $convert:
            input: $documents.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {}, asDateDefault: null, asDateOnError: !!str 'null'}}
  - {'': {v: {a: 1, b: 2}, asDateDefault: null, asDateOnError: !!str 'null'}}

- description: Cast ARRAY to BSON_DATE is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      arrays: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $arrays.v
        asDateDefault:
          $convert:
            input: $arrays.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
        asDateOnError:
          $convert:
            input: $arrays.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: [], asDateDefault: null, asDateOnError: !!str 'null'}}
  - {'': {v: [1, 2, 3], asDateDefault: null, asDateOnError: !!str 'null'}}

- description: Cast OBJECTID to BSON_DATE
  current_db: foo
  pipeline:
  - $project:
      objectIDs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $objectIDs.v
        asDate:
          $convert:
            input: $objectIDs.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$oid: 5ab9c3da31c2ab715d421285}, asDate: {$date: {$numberLong: '1522123738000'}}}}

- description: Cast BOOL to BSON_DATE is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      bools: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bools.v
        asDateDefault:
          $convert:
            input: $bools.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
        asDateOnError:
          $convert:
            input: $bools.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: true, asDateDefault: null, asDateOnError: !!str 'null'}}
  - {'': {v: false, asDateDefault: null, asDateOnError: !!str 'null'}}

- description: Cast BSON_DATE to BSON_DATE
  current_db: foo
  pipeline:
  - $project:
      dates: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $dates.v
        asDate:
          $convert:
            input: $dates.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$date: {$numberLong: '0'}}, asDate: {$date: {$numberLong: '0'}}}}
  - {'': {v: {$date: {$numberLong: '253402300799999'}}, asDate: {$date: {$numberLong: '253402300799999'}}}}
  - {'': {v: {$date: {$numberLong: '-62135596800000'}}, asDate: {$date: {$numberLong: '-62135596800000'}}}}

- description: Cast NULL and MISSING to BSON_DATE, returns NULL by default and ON
    NULL when set
  current_db: foo
  pipeline:
  - $project:
      nullAndMissing: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $nullAndMissing.v
        asDateDefault:
          $convert:
            input: $nullAndMissing.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
        asDateOnNull:
          $convert:
            input: $nullAndMissing.v
            to: date
            onNull:
              $literal: 'null'
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: null, asDateDefault: null, asDateOnNull: !!str 'null'}}
  - {'': {asDateDefault: null, asDateOnNull: !!str 'null'}}

- description: Cast INT to BSON_DATE is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      ints: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $ints.v
        asDateDefault:
          $convert:
            input: $ints.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
        asDateOnError:
          $convert:
            input: $ints.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$numberInt: '0'}, asDateDefault: null, asDateOnError: !!str 'null'}}
  - {'': {v: {$numberInt: '1'}, asDateDefault: null, asDateOnError: !!str 'null'}}
  - {'': {v: {$numberInt: '-2'}, asDateDefault: null, asDateOnError: !!str 'null'}}

- description: Cast LONG to BSON_DATE
  current_db: foo
  pipeline:
  - $project:
      longs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $longs.v
        asDate:
          $convert:
            input: $longs.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$numberLong: '0'}, asDate: {$date: {$numberLong: '0'}}}}
  - {'': {v: {$numberLong: '1'}, asDate: {$date: {$numberLong: '1'}}}}
  - {'': {v: {$numberLong: '-2'}, asDate: {$date: {$numberLong: '-2'}}}}
  - {'': {v: {$numberLong: '2147483648'}, asDate: {$date: {$numberLong: '2147483648'}}}}
  - {'': {v: {$numberLong: '-2147483649'}, asDate: {$date: {$numberLong: '-2147483649'}}}}

- description: Cast DECIMAL to BSON_DATE, out of range numbers are invalid and return
    NULL
  current_db: foo
  pipeline:
  - $project:
      decimals: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $decimals.v
        asDate:
          $convert:
            input: $decimals.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$numberDecimal: '0'}, asDate: {$date: {$numberLong: '0'}}}}
  - {'': {v: {$numberDecimal: '1.9'}, asDate: {$date: {$numberLong: '1'}}}}
  - {'': {v: {$numberDecimal: '-2.4'}, asDate: {$date: {$numberLong: '-2'}}}}
  - {'': {v: {$numberDecimal: '2147483648.4'}, asDate: {$date: {$numberLong: '2147483648'}}}}
  - {'': {v: {$numberDecimal: '-2147483649.4'}, asDate: {$date: {$numberLong: '-2147483649'}}}}
  - {'': {v: {$numberDecimal: '9223372036854775808.8'}, asDate: null}}
  - {'': {v: {$numberDecimal: '-9223372036854775809.8'}, asDate: null}}
  - {'': {v: {$numberDecimal: '1.8976931348623157E308'}, asDate: null}}
  - {'': {v: {$numberDecimal: '-1.8976931348623157E308'}, asDate: null}}

- description: Cast invalid source types to BSON_DATE
  current_db: foo
  pipeline:
  - $project:
      invalidSourceTypes: $$ROOT
      _id: 0
  - $project:
      __bot:
        type: $invalidSourceTypes.type
        asDate:
          $convert:
            input: $invalidSourceTypes.v
            to: date
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {type: binData, asDate: null}}
  - {'': {type: undefined, asDate: null}}
  - {'': {type: regex, asDate: null}}
  - {'': {type: dbPointer, asDate: null}}
  - {'': {type: javascript, asDate: null}}
  - {'': {type: symbol, asDate: null}}
  - {'': {type: javascriptWithScope, asDate: null}}
  - {'': {type: timestamp, asDate: {$date: {$numberLong: '42000'}}}}
  - {'': {type: minKey, asDate: null}}
  - {'': {type: maxKey, asDate: null}}

- description: Cast DOUBLE to OBJECTID is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      doubles: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $doubles.v
        asObjectIDDefault:
          $convert:
            input: $doubles.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
        asObjectIDOnError:
          $convert:
            input: $doubles.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asObjectIDOnError: {bsonType: string}
          v: {bsonType: double}
          asObjectIDDefault: {bsonType: 'null'}
        required: [asObjectIDDefault, asObjectIDOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast STRING to OBJECTID, non-objectIDs are invalid and return NULL
  current_db: foo
  pipeline:
  - $project:
      strings: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $strings.v
        asObjectID:
          $convert:
            input: $strings.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asObjectID:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: objectId}
          v: {bsonType: string}
        required: [asObjectID, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DOCUMENT to OBJECTID is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      documents: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $documents.v
        asObjectIDDefault:
          $convert:
            input: $documents.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
        asObjectIDOnError:
          $convert:
            input: $documents.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v:
            bsonType: object
            properties:
              a: {bsonType: int}
              b: {bsonType: int}
            additionalProperties: false
          asObjectIDDefault: {bsonType: 'null'}
          asObjectIDOnError: {bsonType: string}
        required: [asObjectIDDefault, asObjectIDOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast ARRAY to OBJECTID is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      arrays: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $arrays.v
        asObjectIDDefault:
          $convert:
            input: $arrays.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
        asObjectIDOnError:
          $convert:
            input: $arrays.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asObjectIDDefault: {bsonType: 'null'}
          asObjectIDOnError: {bsonType: string}
          v:
            bsonType: array
            items: {bsonType: int}
        required: [asObjectIDDefault, asObjectIDOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast OBJECTID to OBJECTID
  current_db: foo
  pipeline:
  - $project:
      objectIDs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $objectIDs.v
        asObjectID:
          $convert:
            input: $objectIDs.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asObjectID: {bsonType: objectId}
          v: {bsonType: objectId}
        required: [asObjectID, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast BOOL to OBJECTID is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      bools: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bools.v
        asObjectIDDefault:
          $convert:
            input: $bools.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
        asObjectIDOnError:
          $convert:
            input: $bools.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asObjectIDDefault: {bsonType: 'null'}
          asObjectIDOnError: {bsonType: string}
          v: {bsonType: bool}
        required: [asObjectIDDefault, asObjectIDOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast BSON_DATE to OBJECTID is invalid, returns NULL by default and
    ON ERROR when set
  current_db: foo
  pipeline:
  - $project:
      dates: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $dates.v
        asObjectIDDefault:
          $convert:
            input: $dates.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
        asObjectIDOnError:
          $convert:
            input: $dates.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$date: {$numberLong: '0'}}, asObjectIDDefault: null, asObjectIDOnError: !!str 'null'}}
  - {'': {v: {$date: {$numberLong: '253402300799999'}}, asObjectIDDefault: null, asObjectIDOnError: !!str 'null'}}
  - {'': {v: {$date: {$numberLong: '-62135596800000'}}, asObjectIDDefault: null, asObjectIDOnError: !!str 'null'}}

- description: Cast NULL and MISSING to OBJECTID, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline:
  - $project:
      nullAndMissing: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $nullAndMissing.v
        asObjectIDDefault:
          $convert:
            input: $nullAndMissing.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
        asObjectIDOnNull:
          $convert:
            input: $nullAndMissing.v
            to: objectId
            onNull:
              $literal: 'null'
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: 'null'}
          asObjectIDDefault: {bsonType: 'null'}
          asObjectIDOnNull: {bsonType: string}
        required: [asObjectIDDefault, asObjectIDOnNull]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast INT to OBJECTID is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      ints: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $ints.v
        asObjectIDDefault:
          $convert:
            input: $ints.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
        asObjectIDOnError:
          $convert:
            input: $ints.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: int}
          asObjectIDDefault: {bsonType: 'null'}
          asObjectIDOnError: {bsonType: string}
        required: [asObjectIDDefault, asObjectIDOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast LONG to OBJECTID is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      longs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $longs.v
        asObjectIDDefault:
          $convert:
            input: $longs.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
        asObjectIDOnError:
          $convert:
            input: $longs.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: long}
          asObjectIDDefault: {bsonType: 'null'}
          asObjectIDOnError: {bsonType: string}
        required: [asObjectIDDefault, asObjectIDOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DECIMAL to OBJECTID is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      decimals: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $decimals.v
        asObjectIDDefault:
          $convert:
            input: $decimals.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
        asObjectIDOnError:
          $convert:
            input: $decimals.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asObjectIDOnError: {bsonType: string}
          asObjectIDDefault: {bsonType: 'null'}
          v: {bsonType: decimal}
        required: [asObjectIDDefault, asObjectIDOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast invalid source types to OBJECTID
  current_db: foo
  pipeline:
  - $project:
      invalidSourceTypes: $$ROOT
      _id: 0
  - $project:
      __bot:
        type: $invalidSourceTypes.type
        asObjectID:
          $convert:
            input: $invalidSourceTypes.v
            to: objectId
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asObjectID: {bsonType: 'null'}
          type: {bsonType: string}
        required: [asObjectID, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DOUBLE to STRING
  current_db: foo
  pipeline:
  - $project:
      doubles: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $doubles.v
        asString:
          $convert:
            input: $doubles.v
            to:
              $cond:
              - $eq:
                - $type: $doubles.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  type_compare: true
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asString: {bsonType: string}
          v: {bsonType: double}
        required: [asString, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast STRING to STRING
  current_db: foo
  pipeline:
  - $project:
      strings: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $strings.v
        asString:
          $convert:
            input: $strings.v
            to:
              $cond:
              - $eq:
                - $type: $strings.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: string}
          asString: {bsonType: string}
        required: [asString, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DOCUMENT to STRING is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      documents: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $documents.v
        asStringDefault:
          $convert:
            input: $documents.v
            to:
              $cond:
              - $eq:
                - $type: $documents.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
        asStringOnError:
          $convert:
            input: $documents.v
            to:
              $cond:
              - $eq:
                - $type: $documents.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asStringOnError: {bsonType: string}
          v:
            bsonType: object
            properties:
              b: {bsonType: int}
              a: {bsonType: int}
            additionalProperties: false
          asStringDefault: {bsonType: 'null'}
        required: [asStringDefault, asStringOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast ARRAY to STRING is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      arrays: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $arrays.v
        asStringDefault:
          $convert:
            input: $arrays.v
            to:
              $cond:
              - $eq:
                - $type: $arrays.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
        asStringOnError:
          $convert:
            input: $arrays.v
            to:
              $cond:
              - $eq:
                - $type: $arrays.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v:
            bsonType: array
            items: {bsonType: int}
          asStringOnError: {bsonType: string}
          asStringDefault: {bsonType: 'null'}
        required: [asStringDefault, asStringOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast OBJECTID to STRING
  current_db: foo
  pipeline:
  - $project:
      objectIDs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $objectIDs.v
        asString:
          $convert:
            input: $objectIDs.v
            to:
              $cond:
              - $eq:
                - $type: $objectIDs.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: objectId}
          asString: {bsonType: string}
        required: [asString, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast BOOL to STRING
  current_db: foo
  pipeline:
  - $project:
      bools: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bools.v
        asString:
          $convert:
            input: $bools.v
            to:
              $cond:
              - $eq:
                - $type: $bools.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asString: {bsonType: string}
          v: {bsonType: bool}
        required: [asString, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast BSON_DATE to STRING
  current_db: foo
  pipeline:
  - $project:
      dates: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $dates.v
        asString:
          $convert:
            input: $dates.v
            to:
              $cond:
              - $eq:
                - $type: $dates.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$date: {$numberLong: '0'}}, asString: '1970-01-01T00:00:00.000Z'}}
  - {'': {v: {$date: {$numberLong: '253402300799999'}}, asString: '9999-12-31T23:59:59.999Z'}}
  - {'': {v: {$date: {$numberLong: '-62135596800000'}}, asString: '0001-01-01T00:00:00.000Z'}}

- description: Cast NULL and MISSING to STRING, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline:
  - $project:
      nullAndMissing: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $nullAndMissing.v
        asStringDefault:
          $convert:
            input: $nullAndMissing.v
            to:
              $cond:
              - $eq:
                - $type: $nullAndMissing.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
        asStringOnNull:
          $convert:
            input: $nullAndMissing.v
            to:
              $cond:
              - $eq:
                - $type: $nullAndMissing.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: 'null'
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asStringDefault: {bsonType: 'null'}
          asStringOnNull: {bsonType: string}
          v: {bsonType: 'null'}
        required: [asStringDefault, asStringOnNull]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast INT to STRING
  current_db: foo
  pipeline:
  - $project:
      ints: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $ints.v
        asString:
          $convert:
            input: $ints.v
            to:
              $cond:
              - $eq:
                - $type: $ints.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asString: {bsonType: string}
          v: {bsonType: int}
        required: [asString, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast LONG to STRING
  current_db: foo
  pipeline:
  - $project:
      longs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $longs.v
        asString:
          $convert:
            input: $longs.v
            to:
              $cond:
              - $eq:
                - $type: $longs.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: long}
          asString: {bsonType: string}
        required: [asString, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DECIMAL to STRING
  current_db: foo
  pipeline:
  - $project:
      decimals: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $decimals.v
        asString:
          $convert:
            input: $decimals.v
            to:
              $cond:
              - $eq:
                - $type: $decimals.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  type_compare: true
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: decimal}
          asString: {bsonType: string}
        required: [asString, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast invalid source types to STRING
  current_db: foo
  pipeline:
  - $project:
      invalidSourceTypes: $$ROOT
      _id: 0
  - $project:
      __bot:
        type: $invalidSourceTypes.type
        asString:
          $convert:
            input: $invalidSourceTypes.v
            to:
              $cond:
              - $eq:
                - $type: $invalidSourceTypes.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          asString: {bsonType: 'null'}
        required: [asString, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast BINDATA to STRING
  current_db: foo
  pipeline:
  - $project:
      bindatum: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bindatum.v
        asString:
          $convert:
            input: $bindatum.v
            to:
              $cond:
              - $eq:
                - $type: $bindatum.v
                - binData
              - 'null'
              - string
            onNull:
              $literal: null
            onError:
              $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: binData}
          asString: {bsonType: 'null'}
        required: [asString, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DOUBLE to DOCUMENT is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      doubles: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $doubles.v
        asDocumentDefault:
          $let:
            vars:
              sqlConvert_input: $doubles.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asDocumentOnError:
          $let:
            vars:
              sqlConvert_input: $doubles.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDocumentOnError: {bsonType: string}
          v: {bsonType: double}
          asDocumentDefault: {bsonType: 'null'}
        required: [asDocumentDefault, asDocumentOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast STRING to DOCUMENT is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      strings: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $strings.v
        asDocumentDefault:
          $let:
            vars:
              sqlConvert_input: $strings.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asDocumentOnError:
          $let:
            vars:
              sqlConvert_input: $strings.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: string}
          asDocumentDefault: {bsonType: 'null'}
          asDocumentOnError: {bsonType: string}
        required: [asDocumentDefault, asDocumentOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DOCUMENT to DOCUMENT
  current_db: foo
  pipeline:
  - $project:
      documents: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $documents.v
        asDocument:
          $let:
            vars:
              sqlConvert_input: $documents.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v:
            bsonType: object
            properties:
              a: {bsonType: int}
              b: {bsonType: int}
            additionalProperties: false
          asDocument:
            bsonType: object
            properties:
              a: {bsonType: int}
              b: {bsonType: int}
            additionalProperties: false
        required: [asDocument, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast ARRAY to DOCUMENT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      arrays: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $arrays.v
        asDocumentDefault:
          $let:
            vars:
              sqlConvert_input: $arrays.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asDocumentOnError:
          $let:
            vars:
              sqlConvert_input: $arrays.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v:
            bsonType: array
            items: {bsonType: int}
          asDocumentOnError: {bsonType: string}
          asDocumentDefault: {bsonType: 'null'}
        required: [asDocumentDefault, asDocumentOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast OBJECTID to DOCUMENT is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      objectIDs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $objectIDs.v
        asDocumentDefault:
          $let:
            vars:
              sqlConvert_input: $objectIDs.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asDocumentOnError:
          $let:
            vars:
              sqlConvert_input: $objectIDs.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asDocumentDefault: {bsonType: 'null'}
          asDocumentOnError: {bsonType: string}
          v: {bsonType: objectId}
        required: [asDocumentDefault, asDocumentOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast BOOL to DOCUMENT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      bools: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bools.v
        asDocumentDefault:
          $let:
            vars:
              sqlConvert_input: $bools.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asDocumentOnError:
          $let:
            vars:
              sqlConvert_input: $bools.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asDocumentOnError: {bsonType: string}
          v: {bsonType: bool}
          asDocumentDefault: {bsonType: 'null'}
        required: [asDocumentDefault, asDocumentOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast BSON_DATE to DOCUMENT is invalid, returns NULL by default and
    ON ERROR when set
  current_db: foo
  pipeline:
  - $project:
      dates: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $dates.v
        asDocumentDefault:
          $let:
            vars:
              sqlConvert_input: $dates.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asDocumentOnError:
          $let:
            vars:
              sqlConvert_input: $dates.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$date: {$numberLong: '0'}}, asDocumentDefault: null, asDocumentOnError: !!str 'null'}}
  - {'': {v: {$date: {$numberLong: '253402300799999'}}, asDocumentDefault: null, asDocumentOnError: !!str 'null'}}
  - {'': {v: {$date: {$numberLong: '-62135596800000'}}, asDocumentDefault: null, asDocumentOnError: !!str 'null'}}

- description: Cast NULL and MISSING to DOCUMENT, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline:
  - $project:
      nullAndMissing: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $nullAndMissing.v
        asDocumentDefault:
          $let:
            vars:
              sqlConvert_input: $nullAndMissing.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asDocumentOnNull:
          $let:
            vars:
              sqlConvert_input: $nullAndMissing.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: 'null'
                default:
                  $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asDocumentDefault: {bsonType: 'null'}
          asDocumentOnNull: {bsonType: string}
          v: {bsonType: 'null'}
        required: [asDocumentDefault, asDocumentOnNull]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast INT to DOCUMENT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      ints: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $ints.v
        asDocumentDefault:
          $let:
            vars:
              sqlConvert_input: $ints.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asDocumentOnError:
          $let:
            vars:
              sqlConvert_input: $ints.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asDocumentDefault: {bsonType: 'null'}
          asDocumentOnError: {bsonType: string}
          v: {bsonType: int}
        required: [asDocumentDefault, asDocumentOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast LONG to DOCUMENT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      longs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $longs.v
        asDocumentDefault:
          $let:
            vars:
              sqlConvert_input: $longs.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asDocumentOnError:
          $let:
            vars:
              sqlConvert_input: $longs.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: long}
          asDocumentDefault: {bsonType: 'null'}
          asDocumentOnError: {bsonType: string}
        required: [asDocumentDefault, asDocumentOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast DECIMAL to DOCUMENT is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      decimals: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $decimals.v
        asDocumentDefault:
          $let:
            vars:
              sqlConvert_input: $decimals.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asDocumentOnError:
          $let:
            vars:
              sqlConvert_input: $decimals.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot

  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asDocumentOnError: {bsonType: string}
          asDocumentDefault: {bsonType: 'null'}
          v: {bsonType: decimal}
        required: [asDocumentDefault, asDocumentOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast invalid source types to DOCUMENT
  current_db: foo
  pipeline:
  - $project:
      invalidSourceTypes: $$ROOT
      _id: 0
  - $project:
      __bot:
        type: $invalidSourceTypes.type
        asDocument:
          $let:
            vars:
              sqlConvert_input: $invalidSourceTypes.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: object
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asDocument: {bsonType: 'null'}
          type: {bsonType: string}
        required: [asDocument, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DOUBLE to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      doubles: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $doubles.v
        asArrayDefault:
          $let:
            vars:
              sqlConvert_input: $doubles.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asArrayOnError:
          $let:
            vars:
              sqlConvert_input: $doubles.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asArrayDefault: {bsonType: 'null'}
          v: {bsonType: double}
          asArrayOnError: {bsonType: string}
        required: [asArrayDefault, asArrayOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast STRING to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      strings: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $strings.v
        asArrayDefault:
          $let:
            vars:
              sqlConvert_input: $strings.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asArrayOnError:
          $let:
            vars:
              sqlConvert_input: $strings.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asArrayDefault: {bsonType: 'null'}
          asArrayOnError: {bsonType: string}
          v: {bsonType: string}
        required: [asArrayDefault, asArrayOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DOCUMENT to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      documents: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $documents.v
        asArrayDefault:
          $let:
            vars:
              sqlConvert_input: $documents.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asArrayOnError:
          $let:
            vars:
              sqlConvert_input: $documents.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v:
            bsonType: object
            properties:
              a: {bsonType: int}
              b: {bsonType: int}
            additionalProperties: false
          asArrayDefault: {bsonType: 'null'}
          asArrayOnError: {bsonType: string}
        required: [asArrayDefault, asArrayOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast ARRAY to ARRAY
  current_db: foo
  pipeline:
  - $project:
      arrays: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $arrays.v
        asArray:
          $let:
            vars:
              sqlConvert_input: $arrays.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v:
            bsonType: array
            items: {bsonType: int}
          asArray:
            bsonType: array
            items: {bsonType: int}
        required: [asArray, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast OBJECTID to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      objectIDs: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $objectIDs.v
        asArrayDefault:
          $let:
            vars:
              sqlConvert_input: $objectIDs.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asArrayOnError:
          $let:
            vars:
              sqlConvert_input: $objectIDs.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asArrayOnError: {bsonType: string}
          asArrayDefault: {bsonType: 'null'}
          v: {bsonType: objectId}
        required: [asArrayDefault, asArrayOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast BOOL to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline:
  - $project:
      bools: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $bools.v
        asArrayDefault:
          $let:
            vars:
              sqlConvert_input: $bools.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asArrayOnError:
          $let:
            vars:
              sqlConvert_input: $bools.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: bool}
          asArrayDefault: {bsonType: 'null'}
          asArrayOnError: {bsonType: string}
        required: [asArrayDefault, asArrayOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast BSON_DATE to ARRAY is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline:
  - $project:
      dates: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $dates.v
        asArrayDefault:
          $let:
            vars:
              sqlConvert_input: $dates.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asArrayOnError:
          $let:
            vars:
              sqlConvert_input: $dates.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: 'null'
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result:
  - {'': {v: {$date: {$numberLong: '0'}}, asArrayDefault: null, asArrayOnError: !!str 'null'}}
  - {'': {v: {$date: {$numberLong: '253402300799999'}}, asArrayDefault: null, asArrayOnError: !!str 'null'}}
  - {'': {v: {$date: {$numberLong: '-62135596800000'}}, asArrayDefault: null, asArrayOnError: !!str 'null'}}

- description: Cast NULL and MISSING to ARRAY, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline:
  - $project:
      nullAndMissing: $$ROOT
      _id: 0
  - $project:
      __bot:
        v: $nullAndMissing.v
        asArrayDefault:
          $let:
            vars:
              sqlConvert_input: $nullAndMissing.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: null
                default:
                  $literal: null
        asArrayOnNull:
          $let:
            vars:
              sqlConvert_input: $nullAndMissing.v
            in:
              $switch:
                branches:
                - case:
                    $eq:
                    - $type:
                      - $$sqlConvert_input
                    - $literal: array
                  then: $$sqlConvert_input
                - case:
                    $lte:
                    - $$sqlConvert_input
                    - $literal: null
                  then:
                    $literal: 'null'
                default:
                  $literal: null
      _id: 0
  - $replaceWith:
      $unsetField:
        field: __bot
        input:
          $setField:
            field: ''
            input: $$ROOT
            value: $__bot
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          v: {bsonType: 'null'}
          asArrayDefault: {bsonType: 'null'}
          asArrayOnNull: {bsonType: string}
        required: [asArrayDefault, asArrayOnNull]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast INT to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$ints.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$ints.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$ints.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          v: {bsonType: int}
          asArrayDefault: {bsonType: 'null'}
          asArrayOnError: {bsonType: string}
        required: [asArrayDefault, asArrayOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast LONG to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$longs.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$longs.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$longs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          asArrayOnError: {bsonType: string}
          v: {bsonType: long}
          asArrayDefault: {bsonType: 'null'}
        required: [asArrayDefault, asArrayOnError, v]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Cast DECIMAL to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$decimals.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$decimals.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$decimals.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asArrayDefault: {bsonType: 'null'}
          v: {bsonType: decimal}
          asArrayOnError: {bsonType: string}
        required: [asArrayDefault, asArrayOnError, v]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Cast invalid source types to ARRAY
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArray": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$invalidSourceTypes.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "type": "$invalidSourceTypes.type"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          asArray: {bsonType: 'null'}
        required: [asArray, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false

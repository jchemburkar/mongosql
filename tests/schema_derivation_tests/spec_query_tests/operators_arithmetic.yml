catalog_schema:
  {
    "foo": {
      "unary": {
        "bsonType": "object",
        'required': [ '_id', 'a' ],
        'additionalProperties': false,
        "properties": {
          "_id": {
            "bsonType": "int"
          },
          "a": {
            "anyOf": [
              { "bsonType": "int" },
              { "bsonType": "long" },
              { "bsonType": "double" },
              { "bsonType": "decimal" },
              { "bsonType": !!str "null" }
            ]
          }
        }
      },
      "binary": {
        "bsonType": "object",
        'required': [ '_id', 'a', 'b' ],
        'additionalProperties': false,
        "properties": {
          "_id": {
            "bsonType": "int"
          },
          "a": {
            "anyOf": [
              { "bsonType": "int" },
              { "bsonType": "long" },
              { "bsonType": "double" },
              { "bsonType": "decimal" },
              { "bsonType": !!str "null" }
            ]
          },
          "b": {
            "anyOf": [
              { "bsonType": "int" },
              { "bsonType": "long" },
              { "bsonType": "double" },
              { "bsonType": "decimal" },
              { "bsonType": !!str "null" }
            ]
          }
        }
      },
      "integer_division": {
        "bsonType": "object",
        "required": ["_id", "a", "b", "c", "d"],
        "additionalProperties": false,
        "properties": {
          "_id": {
            "bsonType": "int"
          },
          "a": {
            "anyOf": [
              { "bsonType": "int" },
              { "bsonType": "long" },
            ]
          },
          "b": {
            "anyOf": [
              { "bsonType": "int" },
              { "bsonType": "long" },
            ]
          },
          "c": {
            "bsonType": "int"
          },
          "d": {
            "bsonType": "int"
          },
        }
      }
    }
  }

tests:
- description: Unary plus correctness tests
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "unary": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$unary.a", 
          "+a": "$unary.a"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          +a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Unary minus correctness tests
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "unary": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$unary.a", 
          "-a": {
            "$multiply": [
              "$unary.a", 
              {
                "$literal": -1
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          -a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        required: [-a]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Addition correctness tests
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "binary": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$binary.a", 
          "a+b": {
            "$add": [
              "$binary.a", 
              "$binary.b"
            ]
          }, 
          "b": "$binary.b"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          a+b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        required: [a+b]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Subtraction correctness tests
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "binary": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$binary.a", 
          "b": "$binary.b", 
          "a-b": {
            "$subtract": [
              "$binary.a", 
              "$binary.b"
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          a-b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        required: [a-b]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Multiplication correctness tests
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "binary": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$binary.a", 
          "a*b": {
            "$multiply": [
              "$binary.a", 
              "$binary.b"
            ]
          }, 
          "b": "$binary.b"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          a*b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        required: [a*b]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Division correctness tests
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "binary": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$binary.a", 
          "b": "$binary.b", 
          "a/b": {
            "$cond": [
              {
                "$eq": [
                  "$binary.b", 
                  {
                    "$literal": 0
                  }
                ]
              }, 
              {
                "$literal": null
              }, 
              {
                "$divide": [
                  "$binary.a", 
                  "$binary.b"
                ]
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          a/b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: double}
            - {bsonType: decimal}
          b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        required: [a/b]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Division by zero results in NULL
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "unary": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$unary.a", 
          "n": {
            "$literal": null
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          n: {bsonType: 'null'}
        required: [n]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Long and integer division with non-integer results truncated
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "i": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$i.a", 
          "c": "$i.c", 
          "b": "$i.b", 
          "d": "$i.d", 
          "a/b": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": {
                "$cond": [
                  {
                    "$eq": [
                      "$i.b", 
                      {
                        "$literal": 0
                      }
                    ]
                  }, 
                  {
                    "$literal": null
                  }, 
                  {
                    "$divide": [
                      "$i.a", 
                      "$i.b"
                    ]
                  }
                ]
              }, 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "c/d": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": {
                "$cond": [
                  {
                    "$eq": [
                      "$i.d", 
                      {
                        "$literal": 0
                      }
                    ]
                  }, 
                  {
                    "$literal": null
                  }, 
                  {
                    "$divide": [
                      "$i.c", 
                      "$i.d"
                    ]
                  }
                ]
              }, 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          d: {bsonType: int}
          b:
            anyOf:
            - {bsonType: int}
            - {bsonType: long}
          a:
            anyOf:
            - {bsonType: int}
            - {bsonType: long}
          a/b: {bsonType: long}
          c: {bsonType: int}
          c/d: {bsonType: int}
        required: [a, a/b, b, c, c/d, d]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false

%YAML 1.2
---
catalog_schema: {foo: {unary: {bsonType: object, required: [_id, a], additionalProperties: false,
      properties: {_id: {bsonType: int}, a: {anyOf: [bsonType: int, bsonType: long,
            bsonType: double, bsonType: decimal, bsonType: !!str "null"]}}}, binary: {
      bsonType: object, required: [_id, a, b], additionalProperties: false, properties: {
        _id: {bsonType: int}, a: {anyOf: [bsonType: int, bsonType: long, bsonType: double,
            bsonType: decimal, bsonType: !!str "null"]}, b: {anyOf: [bsonType: int,
            bsonType: long, bsonType: double, bsonType: decimal, bsonType: !!str "null"]}}},
    integer_division: {bsonType: object, required: [_id, a, b, c, d], additionalProperties: false,
      properties: {_id: {bsonType: int}, a: {anyOf: [bsonType: int, bsonType: long]},
        b: {anyOf: [bsonType: int, bsonType: long]}, c: {bsonType: int}, d: {bsonType: int}}}}}

tests:
- description: Unary plus correctness tests
  current_db: foo
  query: "SELECT VALUE {'a': a, '+a': +a} FROM unary AS unary"
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          +a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Unary minus correctness tests
  current_db: foo
  query: "SELECT VALUE {'a': a, '-a': -a} FROM unary AS unary"
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          -a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        required: [-a]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Addition correctness tests
  current_db: foo
  query: "SELECT VALUE {'a': a, 'b': b, 'a+b': a + b} FROM binary AS binary"
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          a+b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        required: [a+b]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Subtraction correctness tests
  current_db: foo
  query: "SELECT VALUE {'a': a, 'b': b, 'a-b': a - b} FROM binary AS binary"
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          a-b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        required: [a-b]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Multiplication correctness tests
  current_db: foo
  query: "SELECT VALUE {'a': a, 'b': b, 'a*b': a * b} FROM binary AS binary"
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          a*b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        required: [a*b]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Division correctness tests
  current_db: foo
  query: "SELECT VALUE {'a': a, 'b': b, 'a/b': a / b} FROM binary AS binary"
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          a/b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: double}
            - {bsonType: decimal}
          b:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
        required: [a/b]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Division by zero results in NULL
  current_db: foo
  query: "SELECT VALUE {'a': a, 'n': a / 0} FROM unary AS unary"
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - {bsonType: long}
            - {bsonType: double}
            - {bsonType: decimal}
          n: {bsonType: 'null'}
        required: [n]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Long and integer division with non-integer results truncated
  current_db: foo
  query: "SELECT VALUE {'a': a, 'b': b, 'c': c, 'd': d, 'a/b': a / b, 'c/d': c / d}
    FROM integer_division AS i"
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          d: {bsonType: int}
          b:
            anyOf:
            - {bsonType: int}
            - {bsonType: long}
          a:
            anyOf:
            - {bsonType: int}
            - {bsonType: long}
          a/b: {bsonType: long}
          c: {bsonType: int}
          c/d: {bsonType: int}
        required: [a, a/b, b, c, c/d, d]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false

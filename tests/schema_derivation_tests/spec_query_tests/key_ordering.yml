catalog_schema:
  {
    'mydb': {
      'foo': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'bar': {
        'bsonType': 'object',
        'additionalProperties': true,
      }
    }
  }

tests:
- description: document literal key ordering is not guaranteed to be preserved
  current_db: mydb
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "f": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "c": "$f.a", 
          "b": "$f._id"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  "result_set_schema": {
    "additionalProperties": false, 
    "required": [
      "", 
      "_id"
    ], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "b", 
          "c"
        ], 
        "properties": {
          "c": {
            "bsonType": "int"
          }, 
          "b": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }, 
      "_id": {
        "bsonType": "objectId"
      }
    }, 
    "bsonType": "object"
  }
- description: key ordering from docs in collections is not guaranteed to be preserved
  current_db: mydb
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "f": "$$ROOT"
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      f:
        bsonType: object
        properties:
          a: {bsonType: int}
          _id: {bsonType: int}
        required: [_id, a]
        additionalProperties: false
    required: [_id, f]
    additionalProperties: false
- description: subdocument key ordering is not guaranteed to be preserved
  current_db: mydb
  "pipeline": [
    {
      "$project": {
        "b": "$$ROOT", 
        "_id": 0
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      b:
        bsonType: object
        properties:
          sub:
            bsonType: object
            properties:
              b: {bsonType: int}
              a: {bsonType: int}
            required: [a, b]
            additionalProperties: false
          _id: {bsonType: int}
        required: [_id, sub]
        additionalProperties: false
    required: [_id, b]
    additionalProperties: false

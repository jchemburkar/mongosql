catalog_schema:
  {
    'foo': {
      'bar': {
        'bsonType': 'object',
        'additionalProperties': true,
      }
    }
  }

tests:
- description: Correctness test for IS DOUBLE
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "double"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS STRING
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "string"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS DOCUMENT
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "object"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          tc: {bsonType: bool}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS ARRAY
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$isArray": [
              "$bar.v"
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS BINDATA
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "binData"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS UNDEFINED
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "undefined"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          tc: {bsonType: bool}
        required: [tc, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS OBJECTID
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "objectId"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS BOOL
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "bool"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS BSON_DATE
  current_db: foo
  
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "date"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result:
  - {'': {type: double, tc: false}}
  - {'': {type: string, tc: false}}
  - {'': {type: document, tc: false}}
  - {'': {type: array, tc: false}}
  - {'': {type: binData, tc: false}}
  - {'': {type: undefined, tc: false}}
  - {'': {type: objectid, tc: false}}
  - {'': {type: boolean, tc: false}}
  - {'': {type: date, tc: true}}
  - {'': {type: 'null', tc: false}}
  - {'': {type: missing, tc: false}}
  - {'': {type: regex, tc: false}}
  - {'': {type: dbPointer, tc: false}}
  - {'': {type: javascript, tc: false}}
  - {'': {type: symbol, tc: false}}
  - {'': {type: javascriptWithScope, tc: false}}
  - {'': {type: int, tc: false}}
  - {'': {type: timestamp, tc: false}}
  - {'': {type: long, tc: false}}
  - {'': {type: decimal, tc: false}}
  - {'': {type: minKey, tc: false}}
  - {'': {type: maxKey, tc: false}}

- description: Correctness test for IS NULL
  current_db: foo
  
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "null"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS MISSING
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "missing"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS REGEX
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "regex"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          tc: {bsonType: bool}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS DBPOINTER
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "dbPointer"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          tc: {bsonType: bool}
        required: [tc, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS JAVASCRIPT
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "javascript"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS SYMBOL
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "symbol"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS JAVASCRIPTWITHSCOPE
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "javascriptWithScope"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          tc: {bsonType: bool}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS INT
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "int"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          tc: {bsonType: bool}
        required: [tc, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS BSON_TIMESTAMP
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "timestamp"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result:
  - {'': {type: double, tc: false}}
  - {'': {type: string, tc: false}}
  - {'': {type: document, tc: false}}
  - {'': {type: array, tc: false}}
  - {'': {type: binData, tc: false}}
  - {'': {type: undefined, tc: false}}
  - {'': {type: objectid, tc: false}}
  - {'': {type: boolean, tc: false}}
  - {'': {type: date, tc: false}}
  - {'': {type: 'null', tc: false}}
  - {'': {type: missing, tc: false}}
  - {'': {type: regex, tc: false}}
  - {'': {type: dbPointer, tc: false}}
  - {'': {type: javascript, tc: false}}
  - {'': {type: symbol, tc: false}}
  - {'': {type: javascriptWithScope, tc: false}}
  - {'': {type: int, tc: false}}
  - {'': {type: timestamp, tc: true}}
  - {'': {type: long, tc: false}}
  - {'': {type: decimal, tc: false}}
  - {'': {type: minKey, tc: false}}
  - {'': {type: maxKey, tc: false}}

- description: Correctness test for IS LONG
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "long"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          tc: {bsonType: bool}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS DECIMAL
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "decimal"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          tc: {bsonType: bool}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS MINKEY
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "minKey"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS MAXKEY
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$eq": [
              {
                "$type": [
                  "$bar.v"
                ]
              }, 
              {
                "$literal": "maxKey"
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          type: {bsonType: string}
          tc: {bsonType: bool}
        required: [tc, type]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Correctness test for IS NUMBER
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$bar.type", 
          "tc": {
            "$isNumber": [
              "$bar.v"
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          tc: {bsonType: bool}
          type: {bsonType: string}
        required: [tc, type]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false

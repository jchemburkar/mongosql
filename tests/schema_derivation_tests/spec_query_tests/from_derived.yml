%YAML 1.2
---
catalog_schema: {test: {foo: {bsonType: object, additionalProperties: true}, bar: {
      bsonType: object, additionalProperties: true}}}

tests:
- description: both unqualified and qualified references to derived table datasource
    fields are allowed
  query: "SELECT VALUE {'asub': asub, 'bsub': derived.bsub} FROM (SELECT VALUE {'asub':
    a, 'bsub': b} FROM [{'a': 1, 'b': 1}] AS arr) AS derived"
  current_db: test
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          asub: {bsonType: int}
          bsub: {bsonType: int}
        required: [asub, bsub]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: there is no ambiguity with one schema-less datasource in a derived
    table
  current_db: test
  query: SELECT * FROM (SELECT * FROM foo AS foo) AS derived
  result_set_schema:
    bsonType: object
    properties:
      derived:
        bsonType: object
        properties:
          _id: {bsonType: int}
          x: {bsonType: int}
          y: {bsonType: int}
        required: [_id, x, y]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: [_id, derived]
    additionalProperties: false
- description: derived table merges namespaces under alias namespace
  query: "SELECT * FROM (SELECT foo.*, bar.* FROM [{'a': 1}] foo JOIN [{'b': 2}] bar)
    AS derived"
  current_db: test
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      derived:
        bsonType: object
        properties:
          b: {bsonType: int}
          a: {bsonType: int}
        required: [a, b]
        additionalProperties: false
    required: [_id, derived]
    additionalProperties: false

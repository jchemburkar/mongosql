catalog_schema:
  {
    'foo': {
      'bar': {
        'bsonType': 'object',
        'additionalProperties': true,
      }
    }
  }

tests:
- description: SELECT empty document literal
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "$literal": {}
        }
      ]
    }, 
    {
      "$project": {
        "_dual": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "_1": {
            "$literal": {}
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          _1:
            bsonType: object
            properties: {}
            additionalProperties: false
        required: [_1]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: SELECT VALUE empty document literal
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "$literal": {}
        }
      ]
    }, 
    {
      "$project": {
        "_dual": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "$literal": {}
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties: {}
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: SELECT non-empty document literals
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "$literal": {}
        }
      ]
    }, 
    {
      "$project": {
        "_dual": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "_2": {
            "c": {
              "$literal": 3
            }, 
            "b": {
              "$literal": 2
            }
          }, 
          "_1": {
            "a": {
              "$literal": 1
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          _2:
            bsonType: object
            properties:
              b: {bsonType: int}
              c: {bsonType: int}
            required: [b, c]
            additionalProperties: false
          _1:
            bsonType: object
            properties:
              a: {bsonType: int}
            required: [a]
            additionalProperties: false
        required: [_1, _2]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: SELECT VALUE non-empty document literal
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "$literal": {}
        }
      ]
    }, 
    {
      "$project": {
        "_dual": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": {
            "$literal": 1
          }, 
          "c": {
            "$literal": 3
          }, 
          "b": {
            "$literal": 2
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          a: {bsonType: int}
          b: {bsonType: int}
          c: {bsonType: int}
        required: [a, b, c]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Dot notation field access from literal document
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "$literal": {}
        }
      ]
    }, 
    {
      "$project": {
        "_dual": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": {
            "$literal": 1
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          a: {bsonType: int}
        required: [a]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Dot notation one-level field access
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "a": {
            "b": {
              "$literal": 100
            }
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "b": "$arr.a.b"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          b: {bsonType: int}
        required: [b]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Dot notation multi-level field access
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "a": {
            "b": {
              "c": {
                "$literal": 100
              }
            }
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "c": "$arr.a.b.c"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          c: {bsonType: int}
        required: [c]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: Dot notation field access from expression that evaluates to non-document at runtime
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "bar": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$bar.a", 
          "_id": "$bar._id", 
          "b": "$bar.a.b"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          b: {bsonType: int}
          _id: {bsonType: int}
          a:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
            - bsonType: object
              properties:
                b: {bsonType: int}
              required: [b]
              additionalProperties: false
        required: [_id]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Dot notation SELECT field called star
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "a": {
            "c": {
              "$literal": 1
            }, 
            "*": {
              "$literal": 100
            }, 
            "b": {
              "$literal": 10
            }
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "*": "$arr.a.*"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          '*': {bsonType: int}
        required: ['*']
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Bracket notation field access from literal document
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "$literal": {}
        }
      ]
    }, 
    {
      "$project": {
        "_dual": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": {
            "$literal": 1
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          a: {bsonType: int}
        required: [a]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Bracket notation one-level field access
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "a": {
            "b": {
              "$literal": 100
            }
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "b": "$arr.a.b"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          b: {bsonType: int}
        required: [b]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Bracket notation multi-level field access
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "a": {
            "b": {
              "c": {
                "$literal": 100
              }
            }
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "c": "$arr.a.b.c"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          c: {bsonType: int}
        required: [c]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: Bracket notation SELECT field called star
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "a": {
            "c": {
              "$literal": 1
            }, 
            "*": {
              "$literal": 100
            }, 
            "b": {
              "$literal": 10
            }
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "*": "$arr.a.*"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          '*': {bsonType: int}
        required: ['*']
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false

- description: Mixed notation field access
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "a": {
            "b": {
              "c": {
                "d": {
                  "$literal": 100
                }
              }
            }
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "d": "$arr.a.b.c.d"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          d: {bsonType: int}
        required: [d]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false

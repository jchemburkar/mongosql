catalog_schema:
  {
    'foo': {
      'ternary': {
        'bsonType': "object",
        'required': [ '_id', 'a', 'b', 'c' ],
        'additionalProperties': false,
        'properties': {
          '_id': { 'bsonType': "int" },
          'a': { 'bsonType': "int" },
          'b': { 'bsonType': "int" },
          'c': { 'bsonType': "int" },
        }
      },
    }
  }

tests:
- description: parentheses correctness tests
  current_db: foo
  "pipeline": [
    {
      "$project": {
        "_id": 0, 
        "ternary": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$ternary.a", 
          "(a+b)*c": {
            "$multiply": [
              {
                "$add": [
                  "$ternary.a", 
                  "$ternary.b"
                ]
              }, 
              "$ternary.c"
            ]
          }, 
          "c": "$ternary.c", 
          "b": "$ternary.b", 
          "a+b*c": {
            "$add": [
              "$ternary.a", 
              {
                "$multiply": [
                  "$ternary.b", 
                  "$ternary.c"
                ]
              }
            ]
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          b: {bsonType: int}
          (a+b)*c: {bsonType: int}
          a+b*c: {bsonType: int}
          a: {bsonType: int}
          c: {bsonType: int}
        required: [(a+b)*c, a, a+b*c, b, c]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false

%YAML 1.2
---
catalog_schema: {foo: {no_start: {bsonType: object, additionalProperties: true}, start: {
      bsonType: object, additionalProperties: true}}}

tests:
- description: SLICE without start argument correctness test
  current_db: foo
  query: "SELECT VALUE {'arr': arr, 'len': len, 'slice': SLICE(arr::!ARRAY, len::!INT)}
    FROM no_start AS ns"
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          slice:
            anyOf:
            - {bsonType: 'null'}
            - bsonType: array
              items: {bsonType: int}
          len:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
          arr:
            anyOf:
            - {bsonType: 'null'}
            - bsonType: array
              items: {bsonType: int}
        required: [slice]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false
- description: SLICE with start argument correctness test
  current_db: foo
  query: "SELECT VALUE {'arr': arr, 'len': len, 'start': start, 'slice': SLICE(arr::!ARRAY,
    start::!INT, len::!INT)} FROM start AS s"
  result_set_schema:
    bsonType: object
    properties:
      '':
        bsonType: object
        properties:
          len:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
          arr:
            anyOf:
            - {bsonType: 'null'}
            - bsonType: array
              items: {bsonType: int}
          start:
            anyOf:
            - {bsonType: 'null'}
            - {bsonType: int}
          slice:
            anyOf:
            - {bsonType: 'null'}
            - bsonType: array
              items: {bsonType: int}
        required: [slice]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: ['', _id]
    additionalProperties: false

catalog_schema:
  {
    'test': {
      'foo': {
        'bsonType': 'object',
        'additionalProperties': true,
      }
    }
  }

tests:
- description: basic array datasource correctness test
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "a": {
            "$literal": 1
          }, 
          "b": {
            "$literal": 1
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      arr:
        bsonType: object
        properties:
          a: {bsonType: int}
          b: {bsonType: int}
        required: [a, b]
        additionalProperties: false
      _id: {bsonType: objectId}
    required: [_id, arr]
    additionalProperties: false
- description: unqualified reference to field from array datasource
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "a": {
            "$literal": 1
          }, 
          "b": {
            "$literal": 1
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$arr.a"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          a: {bsonType: int}
        required: [a]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: qualified reference to field from array datasource
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "a": {
            "$literal": 1
          }, 
          "b": {
            "$literal": 1
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$arr.a"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _id: {bsonType: objectId}
      '':
        bsonType: object
        properties:
          a: {bsonType: int}
        required: [a]
        additionalProperties: false
    required: ['', _id]
    additionalProperties: false
- description: empty array datasource is allowed
  current_db: test
  "pipeline": [
    {
      "$documents": []
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }
  ]
  result: []

- description: array datasource with single empty document is allowed
  current_db: test
  "pipeline": [
    {
      "$documents": [
        {
          "$literal": {}
        }
      ]
    }, 
    {
      "$project": {
        "_dual": "$$ROOT", 
        "_id": 0
      }
    }
  ]
  result_set_schema:
    bsonType: object
    properties:
      _dual:
        bsonType: object
        properties: {}
        additionalProperties: false
      _id: {bsonType: objectId}
    required: [_dual, _id]
    additionalProperties: false

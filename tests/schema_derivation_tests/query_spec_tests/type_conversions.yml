catalog_schema:
  {
    'foo': {
      'doubles': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'strings': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'documents': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'arrays': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'bindatum': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'objectIDs': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'bools': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'dates': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'nullAndMissing': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'ints': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'longs': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'decimals': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
      'invalidSourceTypes': {
        'bsonType': 'object',
        'additionalProperties': true,
      },
    }
  }

tests:
- description: Cast DOUBLE to BOOL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "doubles": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$doubles.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "v": "$doubles.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBool", 
          "v"
        ], 
        "properties": {
          "asBool": {
            "bsonType": "bool"
          }, 
          "v": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast STRING to BOOL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "strings": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$strings.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "v": "$strings.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBool", 
          "v"
        ], 
        "properties": {
          "asBool": {
            "bsonType": "bool"
          }, 
          "v": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOCUMENT to BOOL
  current_db: foo
  type_compare: true
  pipeline: [
    {
      "$project": {
        "documents": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "v": "$documents.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBool", 
          "v"
        ], 
        "properties": {
          "asBool": {
            "bsonType": "bool"
          }, 
          "v": {
            "additionalProperties": false, 
            "properties": {
              "a": {
                "bsonType": "int"
              }, 
              "b": {
                "bsonType": "int"
              }
            }, 
            "bsonType": "object"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast ARRAY to BOOL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "arrays": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "v": "$arrays.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBool", 
          "v"
        ], 
        "properties": {
          "asBool": {
            "bsonType": "bool"
          }, 
          "v": {
            "items": {
              "bsonType": "int"
            }, 
            "bsonType": "array"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast OBJECTID to BOOL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "objectIDs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "v": "$objectIDs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBool", 
          "v"
        ], 
        "properties": {
          "asBool": {
            "bsonType": "bool"
          }, 
          "v": {
            "bsonType": "objectId"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BOOL to BOOL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "bools": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$bools.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "v": "$bools.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBool", 
          "v"
        ], 
        "properties": {
          "asBool": {
            "bsonType": "bool"
          }, 
          "v": {
            "bsonType": "bool"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BSON_DATE to BOOL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "dates": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$dates.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "v": "$dates.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "v": {
            "bsonType": "date"
          },
          "asBool": {
            "bsonType": "bool"
          }
        },
        "required": [
          "asBool",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast NULL and MISSING to BOOL, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "nullAndMissing": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBoolDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "asBoolOnNull": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": "null"
              }, 
              "to": "bool"
            }
          }, 
          "v": "$nullAndMissing.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBoolDefault", 
          "asBoolOnNull"
        ], 
        "properties": {
          "asBoolDefault": {
            "bsonType": "null"
          }, 
          "asBoolOnNull": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast INT to BOOL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$ints.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "v": "$ints.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBool", 
          "v"
        ], 
        "properties": {
          "asBool": {
            "bsonType": "bool"
          }, 
          "v": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast LONG to BOOL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$longs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "v": "$longs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBool", 
          "v"
        ], 
        "properties": {
          "asBool": {
            "bsonType": "bool"
          }, 
          "v": {
            "bsonType": "long"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DECIMAL to BOOL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$decimals.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }, 
          "v": "$decimals.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBool", 
          "v"
        ], 
        "properties": {
          "asBool": {
            "bsonType": "bool"
          }, 
          "v": {
            "bsonType": "decimal"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast invalid source types to BOOL returns True
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$invalidSourceTypes.type", 
          "asBool": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$invalidSourceTypes.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "bool"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asBool", 
          "type"
        ], 
        "properties": {
          "type": {
            "bsonType": "string"
          }, 
          "asBool": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "bool"
              }
            ]
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOUBLE to INT, out of range numbers are invalid and return NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "doubles": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asInt": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$doubles.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$doubles.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asInt", 
          "v"
        ], 
        "properties": {
          "asInt": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "int"
              }
            ]
          }, 
          "v": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast STRING to INT, non-numbers, non-ints, and out of range numbers
    are invalid and return NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "strings": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asInt": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$strings.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$strings.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asInt", 
          "v"
        ], 
        "properties": {
          "asInt": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "int"
              }
            ]
          }, 
          "v": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOCUMENT to INT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "documents": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asIntDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "asIntOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$documents.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asIntDefault", 
          "asIntOnError", 
          "v"
        ], 
        "properties": {
          "asIntDefault": {
            "bsonType": "null"
          }, 
          "asIntOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "additionalProperties": false, 
            "properties": {
              "a": {
                "bsonType": "int"
              }, 
              "b": {
                "bsonType": "int"
              }
            }, 
            "bsonType": "object"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast ARRAY to INT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "arrays": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asIntDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "asIntOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$arrays.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asIntDefault", 
          "asIntOnError", 
          "v"
        ], 
        "properties": {
          "asIntOnError": {
            "bsonType": "string"
          }, 
          "asIntDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "items": {
              "bsonType": "int"
            }, 
            "bsonType": "array"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast OBJECTID to INT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "objectIDs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asIntDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "asIntOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$objectIDs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asIntDefault", 
          "asIntOnError", 
          "v"
        ], 
        "properties": {
          "asIntDefault": {
            "bsonType": "null"
          }, 
          "asIntOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "objectId"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BOOL to INT
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "bools": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asInt": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$bools.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$bools.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asInt", 
          "v"
        ], 
        "properties": {
          "asInt": {
            "bsonType": "int"
          }, 
          "v": {
            "bsonType": "bool"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BSON_DATE to INT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "dates": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asIntDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$dates.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "asIntOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$dates.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$dates.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asIntOnError": {
            "bsonType": "string"
          },
          "asIntDefault": {
            "bsonType": "null"
          },
          "v": {
            "bsonType": "date"
          }
        },
        "required": [
          "asIntDefault",
          "asIntOnError",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast NULL and MISSING to INT, returns NULL by default and ON NULL when
    set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "nullAndMissing": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asIntOnNull": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": "null"
              }, 
              "to": "int"
            }
          }, 
          "asIntDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$nullAndMissing.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asIntDefault", 
          "asIntOnNull"
        ], 
        "properties": {
          "asIntOnNull": {
            "bsonType": "string"
          }, 
          "asIntDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast INT to INT
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asInt": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$ints.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$ints.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asInt", 
          "v"
        ], 
        "properties": {
          "asInt": {
            "bsonType": "int"
          }, 
          "v": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast LONG to INT, out of range numbers are invalid and return NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asInt": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$longs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$longs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asInt", 
          "v"
        ], 
        "properties": {
          "asInt": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "int"
              }
            ]
          }, 
          "v": {
            "bsonType": "long"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DECIMAL to INT, out of range numbers are invalid and return NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asInt": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$decimals.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }, 
          "v": "$decimals.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asInt", 
          "v"
        ], 
        "properties": {
          "asInt": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "int"
              }
            ]
          }, 
          "v": {
            "bsonType": "decimal"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast invalid source types to INT
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$invalidSourceTypes.type", 
          "asInt": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$invalidSourceTypes.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "int"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asInt", 
          "type"
        ], 
        "properties": {
          "type": {
            "bsonType": "string"
          }, 
          "asInt": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOUBLE to DECIMAL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "doubles": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimal": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$doubles.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$doubles.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimal", 
          "v"
        ], 
        "properties": {
          "asDecimal": {
            "bsonType": "decimal"
          }, 
          "v": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast STRING to DECIMAL, non-numbers return NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "strings": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimal": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$strings.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$strings.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimal", 
          "v"
        ], 
        "properties": {
          "asDecimal": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "decimal"
              }
            ]
          }, 
          "v": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOCUMENT to DECIMAL is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "documents": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimalDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "asDecimalOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$documents.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimalDefault", 
          "asDecimalOnError", 
          "v"
        ], 
        "properties": {
          "asDecimalDefault": {
            "bsonType": "null"
          }, 
          "asDecimalOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "additionalProperties": false, 
            "properties": {
              "a": {
                "bsonType": "int"
              }, 
              "b": {
                "bsonType": "int"
              }
            }, 
            "bsonType": "object"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast ARRAY to DECIMAL is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "arrays": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimalDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "asDecimalOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$arrays.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimalDefault", 
          "asDecimalOnError", 
          "v"
        ], 
        "properties": {
          "asDecimalDefault": {
            "bsonType": "null"
          }, 
          "asDecimalOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "items": {
              "bsonType": "int"
            }, 
            "bsonType": "array"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast OBJECTID to DECIMAL is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "objectIDs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimalDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "asDecimalOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$objectIDs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimalDefault", 
          "asDecimalOnError", 
          "v"
        ], 
        "properties": {
          "asDecimalDefault": {
            "bsonType": "null"
          }, 
          "asDecimalOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "objectId"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BOOL to DECIMAL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "bools": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimal": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$bools.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$bools.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimal", 
          "v"
        ], 
        "properties": {
          "asDecimal": {
            "bsonType": "decimal"
          }, 
          "v": {
            "bsonType": "bool"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BSON_DATE to DECIMAL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "dates": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimal": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$dates.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$dates.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDecimal": {
            "bsonType": "decimal"
          },
          "v": {
            "bsonType": "date"
          }
        },
        "required": [
          "asDecimal",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast NULL and MISSING to DECIMAL, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "nullAndMissing": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimalDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "asDecimalOnNull": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": "null"
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$nullAndMissing.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimalDefault", 
          "asDecimalOnNull"
        ], 
        "properties": {
          "asDecimalDefault": {
            "bsonType": "null"
          }, 
          "asDecimalOnNull": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast INT to DECIMAL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimal": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$ints.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$ints.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimal", 
          "v"
        ], 
        "properties": {
          "asDecimal": {
            "bsonType": "decimal"
          }, 
          "v": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast LONG to DECIMAL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimal": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$longs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$longs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimal", 
          "v"
        ], 
        "properties": {
          "asDecimal": {
            "bsonType": "decimal"
          }, 
          "v": {
            "bsonType": "long"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DECIMAL to DECIMAL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDecimal": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$decimals.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }, 
          "v": "$decimals.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimal", 
          "v"
        ], 
        "properties": {
          "asDecimal": {
            "bsonType": "decimal"
          }, 
          "v": {
            "bsonType": "decimal"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast invalid source types to DECIMAL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$invalidSourceTypes.type", 
          "asDecimal": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$invalidSourceTypes.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "decimal"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDecimal", 
          "type"
        ], 
        "properties": {
          "asDecimal": {
            "bsonType": "null"
          }, 
          "type": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOUBLE to DOUBLE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "doubles": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "v": "$doubles.v", 
          "asDouble": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$doubles.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDouble", 
          "v"
        ], 
        "properties": {
          "v": {
            "bsonType": "double"
          }, 
          "asDouble": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast STRING to DOUBLE, non-numbers and out of range numbers are invalid
    and return NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "strings": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "v": "$strings.v", 
          "asDouble": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$strings.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDouble", 
          "v"
        ], 
        "properties": {
          "asDouble": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "double"
              }
            ]
          }, 
          "v": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOCUMENT to DOUBLE is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "documents": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "v": "$documents.v", 
          "asDoubleOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }, 
          "asDoubleDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDoubleDefault", 
          "asDoubleOnError", 
          "v"
        ], 
        "properties": {
          "v": {
            "additionalProperties": false, 
            "properties": {
              "a": {
                "bsonType": "int"
              }, 
              "b": {
                "bsonType": "int"
              }
            }, 
            "bsonType": "object"
          }, 
          "asDoubleOnError": {
            "bsonType": "string"
          }, 
          "asDoubleDefault": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast ARRAY to DOUBLE is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "arrays": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "v": "$arrays.v", 
          "asDoubleOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }, 
          "asDoubleDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDoubleDefault", 
          "asDoubleOnError", 
          "v"
        ], 
        "properties": {
          "v": {
            "items": {
              "bsonType": "int"
            }, 
            "bsonType": "array"
          }, 
          "asDoubleOnError": {
            "bsonType": "string"
          }, 
          "asDoubleDefault": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast OBJECTID to DOUBLE is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "objectIDs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "v": "$objectIDs.v", 
          "asDoubleOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }, 
          "asDoubleDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDoubleDefault", 
          "asDoubleOnError", 
          "v"
        ], 
        "properties": {
          "asDoubleOnError": {
            "bsonType": "string"
          }, 
          "asDoubleDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "objectId"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BOOL to DOUBLE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "bools": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "v": "$bools.v", 
          "asDouble": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$bools.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDouble", 
          "v"
        ], 
        "properties": {
          "v": {
            "bsonType": "bool"
          }, 
          "asDouble": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BSON_DATE to DOUBLE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "dates": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "v": "$dates.v", 
          "asDouble": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$dates.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "v": {
            "bsonType": "date"
          },
          "asDouble": {
            "bsonType": "double"
          }
        },
        "required": [
          "asDouble",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast NULL and MISSING to DOUBLE, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "nullAndMissing": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDoubleOnNull": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": "null"
              }, 
              "to": "double"
            }
          }, 
          "asDoubleDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }, 
          "v": "$nullAndMissing.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDoubleDefault", 
          "asDoubleOnNull"
        ], 
        "properties": {
          "asDoubleOnNull": {
            "bsonType": "string"
          }, 
          "asDoubleDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast INT to DOUBLE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "v": "$ints.v", 
          "asDouble": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$ints.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDouble", 
          "v"
        ], 
        "properties": {
          "asDouble": {
            "bsonType": "double"
          }, 
          "v": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast LONG to DOUBLE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "v": "$longs.v", 
          "asDouble": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$longs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDouble", 
          "v"
        ], 
        "properties": {
          "v": {
            "bsonType": "long"
          }, 
          "asDouble": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DECIMAL to DOUBLE, out of range numbers are invalid and return
    NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "v": "$decimals.v", 
          "asDouble": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$decimals.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDouble", 
          "v"
        ], 
        "properties": {
          "v": {
            "bsonType": "decimal"
          }, 
          "asDouble": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "double"
              }
            ]
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast invalid source types to DOUBLE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$invalidSourceTypes.type", 
          "asDouble": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$invalidSourceTypes.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "double"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDouble", 
          "type"
        ], 
        "properties": {
          "type": {
            "bsonType": "string"
          }, 
          "asDouble": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOUBLE to LONG
  current_db: foo
  pipeline: [
    {
      "$project": {
        "doubles": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLong": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$doubles.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$doubles.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLong", 
          "v"
        ], 
        "properties": {
          "asLong": {
            "bsonType": "long"
          }, 
          "v": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast STRING to LONG, non-numbers, non-ints, and out of range numbers
    are invalid and return NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "strings": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLong": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$strings.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$strings.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLong", 
          "v"
        ], 
        "properties": {
          "asLong": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "long"
              }
            ]
          }, 
          "v": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOCUMENT to LONG is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "documents": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLongOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "asLongDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$documents.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLongDefault", 
          "asLongOnError", 
          "v"
        ], 
        "properties": {
          "asLongOnError": {
            "bsonType": "string"
          }, 
          "asLongDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "additionalProperties": false, 
            "properties": {
              "a": {
                "bsonType": "int"
              }, 
              "b": {
                "bsonType": "int"
              }
            }, 
            "bsonType": "object"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast ARRAY to LONG is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "arrays": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLongOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "asLongDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$arrays.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLongDefault", 
          "asLongOnError", 
          "v"
        ], 
        "properties": {
          "asLongOnError": {
            "bsonType": "string"
          }, 
          "asLongDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "items": {
              "bsonType": "int"
            }, 
            "bsonType": "array"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast OBJECTID to LONG is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "objectIDs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLongOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "asLongDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$objectIDs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLongDefault", 
          "asLongOnError", 
          "v"
        ], 
        "properties": {
          "asLongOnError": {
            "bsonType": "string"
          }, 
          "asLongDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "objectId"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BOOL to LONG
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "bools": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLong": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$bools.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$bools.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLong", 
          "v"
        ], 
        "properties": {
          "asLong": {
            "bsonType": "long"
          }, 
          "v": {
            "bsonType": "bool"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BSON_DATE to LONG
  current_db: foo
  pipeline: [
    {
      "$project": {
        "dates": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLong": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$dates.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$dates.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asLong": {
            "bsonType": "long"
          },
          "v": {
            "bsonType": "date"
          }
        },
        "required": [
          "asLong",
          "v"
        ],
        "additionalProperties": false
      },

    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast NULL and MISSING to LONG, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "nullAndMissing": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLongOnNull": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": "null"
              }, 
              "to": "long"
            }
          }, 
          "asLongDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$nullAndMissing.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLongDefault", 
          "asLongOnNull"
        ], 
        "properties": {
          "asLongOnNull": {
            "bsonType": "string"
          }, 
          "asLongDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast INT to LONG
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLong": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$ints.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$ints.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLong", 
          "v"
        ], 
        "properties": {
          "asLong": {
            "bsonType": "long"
          }, 
          "v": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast LONG to LONG
  current_db: foo
  pipeline: [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLong": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$longs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$longs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLong", 
          "v"
        ], 
        "properties": {
          "asLong": {
            "bsonType": "long"
          }, 
          "v": {
            "bsonType": "long"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DECIMAL to LONG, out of range numbers are invalid and return NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asLong": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$decimals.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }, 
          "v": "$decimals.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLong", 
          "v"
        ], 
        "properties": {
          "asLong": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "long"
              }
            ]
          }, 
          "v": {
            "bsonType": "decimal"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast invalid source types to LONG
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$invalidSourceTypes.type", 
          "asLong": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$invalidSourceTypes.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "long"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asLong", 
          "type"
        ], 
        "properties": {
          "asLong": {
            "bsonType": "null"
          }, 
          "type": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOUBLE to BSON_DATE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "doubles": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDate": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$doubles.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$doubles.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDate": {
            "bsonType": "date"
          },
          "v": {
            "bsonType": "double"
          }
        },
        "required": [
          "asDate",
          "v"
        ],
        "additionalProperties": false
      },

    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast STRING to BSON_DATE, non-dates are invalid and return NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "strings": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDate": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$strings.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$strings.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDate": {
            "anyOf": [
              {
                "bsonType": "null"
              },
              {
                "bsonType": "date"
              }
            ]
          },
          "v": {
            "bsonType": "string"
          }
        },
        "required": [
          "asDate",
          "v"
        ],
        "additionalProperties": false
      },

    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast DOCUMENT to BSON_DATE is invalid, returns NULL by default and
    ON ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "documents": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDateDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "asDateOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$documents.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDateOnError": {
            "bsonType": "string"
          },
          "v": {
            "bsonType": "object",
            "properties": {
              "b": {
                "bsonType": "int"
              },
              "a": {
                "bsonType": "int"
              }
            },
            "additionalProperties": false
          },
          "asDateDefault": {
            "bsonType": "null"
          }
        },
        "required": [
          "asDateDefault",
          "asDateOnError",
          "v"
        ],
        "additionalProperties": false
      },

    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast ARRAY to BSON_DATE is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "arrays": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDateDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "asDateOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$arrays.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDateOnError": {
            "bsonType": "string"
          },
          "asDateDefault": {
            "bsonType": "null"
          },
          "v": {
            "bsonType": "array",
            "items": {
              "bsonType": "int"
            }
          }
        },
        "required": [
          "asDateDefault",
          "asDateOnError",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast OBJECTID to BSON_DATE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "objectIDs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDate": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$objectIDs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDate": {
            "bsonType": "date"
          },
          "v": {
            "bsonType": "objectId"
          }
        },
        "required": [
          "asDate",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast BOOL to BSON_DATE is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "bools": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDateDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$bools.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "asDateOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$bools.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$bools.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDateDefault": {
            "bsonType": "null"
          },
          "asDateOnError": {
            "bsonType": "string"
          },
          "v": {
            "bsonType": "bool"
          }
        },
        "required": [
          "asDateDefault",
          "asDateOnError",
          "v"
        ],
        "additionalProperties": false
      },

    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast BSON_DATE to BSON_DATE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "dates": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDate": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$dates.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$dates.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "v": {
            "bsonType": "date"
          },
          "asDate": {
            "bsonType": "date"
          }
        },
        "required": [
          "asDate",
          "v"
        ],
        "additionalProperties": false
      },

    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast NULL and MISSING to BSON_DATE, returns NULL by default and ON
    NULL when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "nullAndMissing": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDateOnNull": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": "null"
              }, 
              "to": "date"
            }
          }, 
          "asDateDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$nullAndMissing.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "v": {
            "bsonType": "null"
          },
          "asDateOnNull": {
            "bsonType": "string"
          },
          "asDateDefault": {
            "bsonType": "null"
          }
        },
        "required": [
          "asDateDefault",
          "asDateOnNull"
        ],
        "additionalProperties": false
      },

    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast INT to BSON_DATE is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDateDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$ints.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "asDateOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$ints.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$ints.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "v": {
            "bsonType": "int"
          },
          "asDateOnError": {
            "bsonType": "string"
          },
          "asDateDefault": {
            "bsonType": "null"
          }
        },
        "required": [
          "asDateDefault",
          "asDateOnError",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast LONG to BSON_DATE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDate": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$longs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$longs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDate": {
            "bsonType": "date"
          },
          "v": {
            "bsonType": "long"
          }
        },
        "required": [
          "asDate",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast DECIMAL to BSON_DATE, out of range numbers are invalid and return
    NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDate": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$decimals.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "v": "$decimals.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDate": {
            "anyOf": [
              {
                "bsonType": "null"
              },
              {
                "bsonType": "date"
              }
            ]
          },
          "v": {
            "bsonType": "decimal"
          }
        },
        "required": [
          "asDate",
          "v"
        ],
        "additionalProperties": false
      },

    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast invalid source types to BSON_DATE
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDate": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$invalidSourceTypes.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "date"
            }
          }, 
          "type": "$invalidSourceTypes.type"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDate": {
            "anyOf": [
              {
                "bsonType": "null"
              },
              {
                "bsonType": "date"
              }
            ]
          },
          "type": {
            "bsonType": "string"
          }
        },
        "required": [
          "asDate",
          "type"
        ],
        "additionalProperties": false
      },

    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast DOUBLE to OBJECTID is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "doubles": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectIDOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$doubles.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "asObjectIDDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$doubles.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$doubles.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectIDDefault", 
          "asObjectIDOnError", 
          "v"
        ], 
        "properties": {
          "asObjectIDOnError": {
            "bsonType": "string"
          }, 
          "asObjectIDDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast STRING to OBJECTID, non-objectIDs are invalid and return NULL
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "strings": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectID": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$strings.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$strings.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectID", 
          "v"
        ], 
        "properties": {
          "asObjectID": {
            "anyOf": [
              {
                "bsonType": "null"
              }, 
              {
                "bsonType": "objectId"
              }
            ]
          }, 
          "v": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOCUMENT to OBJECTID is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "documents": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectIDOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "asObjectIDDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$documents.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectIDDefault", 
          "asObjectIDOnError", 
          "v"
        ], 
        "properties": {
          "asObjectIDOnError": {
            "bsonType": "string"
          }, 
          "asObjectIDDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "additionalProperties": false, 
            "properties": {
              "a": {
                "bsonType": "int"
              }, 
              "b": {
                "bsonType": "int"
              }
            }, 
            "bsonType": "object"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast ARRAY to OBJECTID is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "arrays": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectIDOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "asObjectIDDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$arrays.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectIDDefault", 
          "asObjectIDOnError", 
          "v"
        ], 
        "properties": {
          "asObjectIDOnError": {
            "bsonType": "string"
          }, 
          "asObjectIDDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "items": {
              "bsonType": "int"
            }, 
            "bsonType": "array"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast OBJECTID to OBJECTID
  current_db: foo
  pipeline: [
    {
      "$project": {
        "objectIDs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectID": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$objectIDs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectID", 
          "v"
        ], 
        "properties": {
          "asObjectID": {
            "bsonType": "objectId"
          }, 
          "v": {
            "bsonType": "objectId"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BOOL to OBJECTID is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "bools": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectIDOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$bools.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "asObjectIDDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$bools.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$bools.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectIDDefault", 
          "asObjectIDOnError", 
          "v"
        ], 
        "properties": {
          "asObjectIDOnError": {
            "bsonType": "string"
          }, 
          "asObjectIDDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "bool"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BSON_DATE to OBJECTID is invalid, returns NULL by default and
    ON ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "dates": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectIDOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$dates.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "asObjectIDDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$dates.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$dates.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asObjectIDDefault": {
            "bsonType": "null"
          },
          "asObjectIDOnError": {
            "bsonType": "string"
          },
          "v": {
            "bsonType": "date"
          }
        },
        "required": [
          "asObjectIDDefault",
          "asObjectIDOnError",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast NULL and MISSING to OBJECTID, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "nullAndMissing": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectIDOnNull": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": "null"
              }, 
              "to": "objectId"
            }
          }, 
          "asObjectIDDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$nullAndMissing.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectIDDefault", 
          "asObjectIDOnNull"
        ], 
        "properties": {
          "asObjectIDOnNull": {
            "bsonType": "string"
          }, 
          "asObjectIDDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast INT to OBJECTID is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectIDOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$ints.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "asObjectIDDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$ints.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$ints.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectIDDefault", 
          "asObjectIDOnError", 
          "v"
        ], 
        "properties": {
          "asObjectIDOnError": {
            "bsonType": "string"
          }, 
          "asObjectIDDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast LONG to OBJECTID is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectIDOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$longs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "asObjectIDDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$longs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$longs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectIDDefault", 
          "asObjectIDOnError", 
          "v"
        ], 
        "properties": {
          "asObjectIDOnError": {
            "bsonType": "string"
          }, 
          "asObjectIDDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "long"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DECIMAL to OBJECTID is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asObjectIDOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$decimals.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "asObjectIDDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$decimals.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }, 
          "v": "$decimals.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectIDDefault", 
          "asObjectIDOnError", 
          "v"
        ], 
        "properties": {
          "asObjectIDOnError": {
            "bsonType": "string"
          }, 
          "asObjectIDDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "decimal"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast invalid source types to OBJECTID
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "type": "$invalidSourceTypes.type", 
          "asObjectID": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$invalidSourceTypes.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": "objectId"
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asObjectID", 
          "type"
        ], 
        "properties": {
          "asObjectID": {
            "bsonType": "null"
          }, 
          "type": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOUBLE to STRING
  current_db: foo
  pipeline: [
    {
      "$project": {
        "doubles": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asString": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$doubles.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$doubles.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$doubles.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  type_compare: true
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asString", 
          "v"
        ], 
        "properties": {
          "asString": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast STRING to STRING
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "strings": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asString": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$strings.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$strings.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$strings.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asString", 
          "v"
        ], 
        "properties": {
          "asString": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOCUMENT to STRING is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "documents": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asStringOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$documents.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$documents.v", 
          "asStringDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$documents.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$documents.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asStringDefault", 
          "asStringOnError", 
          "v"
        ], 
        "properties": {
          "asStringOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "additionalProperties": false, 
            "properties": {
              "a": {
                "bsonType": "int"
              }, 
              "b": {
                "bsonType": "int"
              }
            }, 
            "bsonType": "object"
          }, 
          "asStringDefault": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast ARRAY to STRING is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "arrays": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asStringOnError": {
            "$convert": {
              "onError": {
                "$literal": "null"
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$arrays.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$arrays.v", 
          "asStringDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$arrays.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$arrays.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asStringDefault", 
          "asStringOnError", 
          "v"
        ], 
        "properties": {
          "asStringOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "items": {
              "bsonType": "int"
            }, 
            "bsonType": "array"
          }, 
          "asStringDefault": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast OBJECTID to STRING
  current_db: foo
  pipeline: [
    {
      "$project": {
        "objectIDs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asString": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$objectIDs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$objectIDs.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$objectIDs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asString", 
          "v"
        ], 
        "properties": {
          "asString": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "objectId"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BOOL to STRING
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "bools": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asString": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$bools.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$bools.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$bools.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asString", 
          "v"
        ], 
        "properties": {
          "asString": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "bool"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BSON_DATE to STRING
  current_db: foo
  pipeline: [
    {
      "$project": {
        "dates": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asString": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$dates.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$dates.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$dates.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "v": {
            "bsonType": "date"
          },
          "asString": {
            "bsonType": "string"
          }
        },
        "required": [
          "asString",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast NULL and MISSING to STRING, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "nullAndMissing": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asStringDefault": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$nullAndMissing.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "asStringOnNull": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$nullAndMissing.v", 
              "onNull": {
                "$literal": "null"
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$nullAndMissing.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$nullAndMissing.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asStringDefault", 
          "asStringOnNull"
        ], 
        "properties": {
          "asStringDefault": {
            "bsonType": "null"
          }, 
          "asStringOnNull": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast INT to STRING
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asString": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$ints.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$ints.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$ints.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asString", 
          "v"
        ], 
        "properties": {
          "asString": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast LONG to STRING
  current_db: foo
  pipeline: [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asString": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$longs.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$longs.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$longs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asString", 
          "v"
        ], 
        "properties": {
          "asString": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "long"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DECIMAL to STRING
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asString": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$decimals.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$decimals.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$decimals.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  type_compare: true
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asString", 
          "v"
        ], 
        "properties": {
          "asString": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "decimal"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast invalid source types to STRING
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asString": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$invalidSourceTypes.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$invalidSourceTypes.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "type": "$invalidSourceTypes.type"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asString", 
          "type"
        ], 
        "properties": {
          "asString": {
            "bsonType": "null"
          }, 
          "type": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BINDATA to STRING
  current_db: foo
  pipeline: [
    {
      "$project": {
        "bindatum": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asString": {
            "$convert": {
              "onError": {
                "$literal": null
              }, 
              "input": "$bindatum.v", 
              "onNull": {
                "$literal": null
              }, 
              "to": {
                "$cond": [
                  {
                    "$eq": [
                      {
                        "$type": "$bindatum.v"
                      }, 
                      "binData"
                    ]
                  }, 
                  "null", 
                  "string"
                ]
              }
            }
          }, 
          "v": "$bindatum.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asString", 
          "v"
        ], 
        "properties": {
          "asString": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "binData"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOUBLE to DOCUMENT is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "doubles": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocumentOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$doubles.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$doubles.v", 
          "asDocumentDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$doubles.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocumentDefault", 
          "asDocumentOnError", 
          "v"
        ], 
        "properties": {
          "asDocumentDefault": {
            "bsonType": "null"
          }, 
          "asDocumentOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast STRING to DOCUMENT is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "strings": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocumentOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$strings.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$strings.v", 
          "asDocumentDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$strings.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocumentDefault", 
          "asDocumentOnError", 
          "v"
        ], 
        "properties": {
          "asDocumentOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "string"
          }, 
          "asDocumentDefault": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOCUMENT to DOCUMENT
  current_db: foo
  pipeline: [
    {
      "$project": {
        "documents": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocument": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$documents.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$documents.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocument", 
          "v"
        ], 
        "properties": {
          "asDocument": {
            "additionalProperties": false, 
            "properties": {
              "a": {
                "bsonType": "int"
              }, 
              "b": {
                "bsonType": "int"
              }
            }, 
            "bsonType": "object"
          }, 
          "v": {
            "additionalProperties": false, 
            "properties": {
              "a": {
                "bsonType": "int"
              }, 
              "b": {
                "bsonType": "int"
              }
            }, 
            "bsonType": "object"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast ARRAY to DOCUMENT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "arrays": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocumentOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$arrays.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$arrays.v", 
          "asDocumentDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$arrays.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocumentDefault", 
          "asDocumentOnError", 
          "v"
        ], 
        "properties": {
          "asDocumentDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "items": {
              "bsonType": "int"
            }, 
            "bsonType": "array"
          }, 
          "asDocumentOnError": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast OBJECTID to DOCUMENT is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "objectIDs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocumentOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$objectIDs.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$objectIDs.v", 
          "asDocumentDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$objectIDs.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocumentDefault", 
          "asDocumentOnError", 
          "v"
        ], 
        "properties": {
          "v": {
            "bsonType": "objectId"
          }, 
          "asDocumentDefault": {
            "bsonType": "null"
          }, 
          "asDocumentOnError": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BOOL to DOCUMENT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "bools": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocumentOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$bools.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$bools.v", 
          "asDocumentDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$bools.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocumentDefault", 
          "asDocumentOnError", 
          "v"
        ], 
        "properties": {
          "asDocumentDefault": {
            "bsonType": "null"
          }, 
          "asDocumentOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "bool"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast BSON_DATE to DOCUMENT is invalid, returns NULL by default and
    ON ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "dates": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocumentOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$dates.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$dates.v", 
          "asDocumentDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$dates.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "asDocumentOnError": {
            "bsonType": "string"
          },
          "v": {
            "bsonType": "date"
          },
          "asDocumentDefault": {
            "bsonType": "null"
          }
        },
        "required": [
          "asDocumentDefault",
          "asDocumentOnError",
          "v"
        ],
        "additionalProperties": false
      },

    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast NULL and MISSING to DOCUMENT, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "nullAndMissing": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocumentOnNull": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$nullAndMissing.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": "null"
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$nullAndMissing.v", 
          "asDocumentDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$nullAndMissing.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocumentDefault", 
          "asDocumentOnNull"
        ], 
        "properties": {
          "asDocumentOnNull": {
            "bsonType": "string"
          }, 
          "asDocumentDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast INT to DOCUMENT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocumentOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$ints.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$ints.v", 
          "asDocumentDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$ints.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocumentDefault", 
          "asDocumentOnError", 
          "v"
        ], 
        "properties": {
          "v": {
            "bsonType": "int"
          }, 
          "asDocumentDefault": {
            "bsonType": "null"
          }, 
          "asDocumentOnError": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast LONG to DOCUMENT is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocumentOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$longs.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$longs.v", 
          "asDocumentDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$longs.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocumentDefault", 
          "asDocumentOnError", 
          "v"
        ], 
        "properties": {
          "asDocumentOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "long"
          }, 
          "asDocumentDefault": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DECIMAL to DOCUMENT is invalid, returns NULL by default and ON
    ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocumentOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$decimals.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$decimals.v", 
          "asDocumentDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$decimals.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocumentDefault", 
          "asDocumentOnError", 
          "v"
        ], 
        "properties": {
          "v": {
            "bsonType": "decimal"
          }, 
          "asDocumentOnError": {
            "bsonType": "string"
          }, 
          "asDocumentDefault": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast invalid source types to DOCUMENT
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asDocument": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$invalidSourceTypes.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "object"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "type": "$invalidSourceTypes.type"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asDocument", 
          "type"
        ], 
        "properties": {
          "asDocument": {
            "bsonType": "null"
          }, 
          "type": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOUBLE to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "doubles": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$doubles.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$doubles.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$doubles.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArrayDefault", 
          "asArrayOnError", 
          "v"
        ], 
        "properties": {
          "asArrayDefault": {
            "bsonType": "null"
          }, 
          "asArrayOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "double"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast STRING to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "strings": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$strings.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$strings.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$strings.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArrayDefault", 
          "asArrayOnError", 
          "v"
        ], 
        "properties": {
          "asArrayDefault": {
            "bsonType": "null"
          }, 
          "asArrayOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast DOCUMENT to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "documents": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$documents.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$documents.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$documents.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArrayDefault", 
          "asArrayOnError", 
          "v"
        ], 
        "properties": {
          "asArrayDefault": {
            "bsonType": "null"
          }, 
          "asArrayOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "additionalProperties": false, 
            "properties": {
              "a": {
                "bsonType": "int"
              }, 
              "b": {
                "bsonType": "int"
              }
            }, 
            "bsonType": "object"
          }
        }, 
        "bsonType": "object"
      }, 
    }, 
    "bsonType": "object"
  }
- description: Cast ARRAY to ARRAY
  current_db: foo
  pipeline: [
    {
      "$project": {
        "arrays": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArray": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$arrays.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$arrays.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArray", 
          "v"
        ], 
        "properties": {
          "asArray": {
            "items": {
              "bsonType": "int"
            }, 
            "bsonType": "array"
          }, 
          "v": {
            "items": {
              "bsonType": "int"
            }, 
            "bsonType": "array"
          }
        }, 
        "bsonType": "object"
      },
    }, 
    "bsonType": "object"
  }
- description: Cast OBJECTID to ARRAY is invalid, returns NULL by default and ON ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "objectIDs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$objectIDs.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$objectIDs.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$objectIDs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArrayDefault", 
          "asArrayOnError", 
          "v"
        ], 
        "properties": {
          "asArrayOnError": {
            "bsonType": "string"
          }, 
          "asArrayDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "objectId"
          }
        }, 
        "bsonType": "object"
      },
    }, 
    "bsonType": "object"
  }
- description: Cast BOOL to ARRAY is invalid, returns NULL by default and ON ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "bools": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$bools.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$bools.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$bools.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArrayDefault", 
          "asArrayOnError", 
          "v"
        ], 
        "properties": {
          "asArrayDefault": {
            "bsonType": "null"
          }, 
          "asArrayOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "bool"
          }
        }, 
        "bsonType": "object"
      },
    }, 
    "bsonType": "object"
  }
- description: Cast BSON_DATE to ARRAY is invalid, returns NULL by default and ON ERROR when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "dates": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$dates.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$dates.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$dates.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "bsonType": "object",
    "properties": {
      "": {
        "bsonType": "object",
        "properties": {
          "v": {
            "bsonType": "date"
          },
          "asArrayDefault": {
            "bsonType": "null"
          },
          "asArrayOnError": {
            "bsonType": "string"
          }
        },
        "required": [
          "asArrayDefault",
          "asArrayOnError",
          "v"
        ],
        "additionalProperties": false
      }
    },
    "required": [""],
    "additionalProperties": false
  }

- description: Cast NULL and MISSING to ARRAY, returns NULL by default and ON NULL
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "nullAndMissing": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayOnNull": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$nullAndMissing.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": "null"
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$nullAndMissing.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$nullAndMissing.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArrayDefault", 
          "asArrayOnNull"
        ], 
        "properties": {
          "asArrayOnNull": {
            "bsonType": "string"
          }, 
          "asArrayDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "null"
          }
        }, 
        "bsonType": "object"
      },
    }, 
    "bsonType": "object"
  }
- description: Cast INT to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "ints": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$ints.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$ints.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$ints.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArrayDefault", 
          "asArrayOnError", 
          "v"
        ], 
        "properties": {
          "asArrayDefault": {
            "bsonType": "null"
          }, 
          "asArrayOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      },
    }, 
    "bsonType": "object"
  }
- description: Cast LONG to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "longs": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$longs.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$longs.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$longs.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArrayDefault", 
          "asArrayOnError", 
          "v"
        ], 
        "properties": {
          "asArrayOnError": {
            "bsonType": "string"
          }, 
          "asArrayDefault": {
            "bsonType": "null"
          }, 
          "v": {
            "bsonType": "long"
          }
        }, 
        "bsonType": "object"
      }
    }, 
    "bsonType": "object"
  }
- description: Cast DECIMAL to ARRAY is invalid, returns NULL by default and ON ERROR
    when set
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "decimals": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArrayDefault": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$decimals.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "asArrayOnError": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$decimals.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": "null"
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "v": "$decimals.v"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArrayDefault", 
          "asArrayOnError", 
          "v"
        ], 
        "properties": {
          "asArrayDefault": {
            "bsonType": "null"
          }, 
          "asArrayOnError": {
            "bsonType": "string"
          }, 
          "v": {
            "bsonType": "decimal"
          }
        }, 
        "bsonType": "object"
      }
    }, 
    "bsonType": "object"
  }
- description: Cast invalid source types to ARRAY
  current_db: foo
  pipeline: [
    {
      "$project": {
        "_id": 0, 
        "invalidSourceTypes": "$$ROOT"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "asArray": {
            "$let": {
              "vars": {
                "sqlConvert_input": "$invalidSourceTypes.v"
              }, 
              "in": {
                "$switch": {
                  "default": {
                    "$literal": null
                  }, 
                  "branches": [
                    {
                      "case": {
                        "$eq": [
                          {
                            "$type": [
                              "$$sqlConvert_input"
                            ]
                          }, 
                          {
                            "$literal": "array"
                          }
                        ]
                      }, 
                      "then": "$$sqlConvert_input"
                    }, 
                    {
                      "case": {
                        "$lte": [
                          "$$sqlConvert_input", 
                          {
                            "$literal": null
                          }
                        ]
                      }, 
                      "then": {
                        "$literal": null
                      }
                    }
                  ]
                }
              }
            }
          }, 
          "type": "$invalidSourceTypes.type"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asArray", 
          "type"
        ], 
        "properties": {
          "asArray": {
            "bsonType": "null"
          }, 
          "type": {
            "bsonType": "string"
          }
        }, 
        "bsonType": "object"
      },
    }, 
    "bsonType": "object"
  }

tests:
- description: collections with different schema can be unioned
  current_db: schema_derivation_union
  current_collection: foo
  pipeline: [
    {
      "$project": {
        "foo": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$unionWith": {
        "coll": "bar", 
        pipeline: [
          {
            "$project": {
              "_id": 0, 
              "bar": "$$ROOT"
            }
          }
        ]
      }
    }
  ]
  ordered: false
  result_set_schema: {
    "additionalProperties": false, 
    "required": [], 
    "properties": {
      "bar": {
        "additionalProperties": false, 
        "required": [
          "_id", 
          "b", 
          "c"
        ], 
        "properties": {
          "c": {
            "bsonType": "int"
          }, 
          "b": {
            "bsonType": "int"
          }, 
          "_id": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }, 
      "foo": {
        "additionalProperties": false, 
        "required": [
          "_id", 
          "a"
        ], 
        "properties": {
          "a": {
            "bsonType": "int"
          }, 
          "_id": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }
    }, 
    "bsonType": "object"
  }
- description: basic union all correctness test
  current_db: schema_derivation_union
  current_collection: foo
  pipeline: [
    {
      "$project": {
        "foo": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$foo.a"
        }, 
        "_id": 0
      }
    }, 
    {
      "$unionWith": {
        "coll": "foo", 
        pipeline: [
          {
            "$project": {
              "foo": "$$ROOT", 
              "_id": 0
            }
          }, 
          {
            "$project": {
              "__bot": {
                "a": "$foo.a"
              }, 
              "_id": 0
            }
          }
        ]
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  ordered: false
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "a"
        ], 
        "properties": {
          "a": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      },
    }, 
    "bsonType": "object"
  }
- description: union works with array datasources
  current_db: schema_derivation_union
  current_collection: foo
  pipeline: [
    {
      "$project": {
        "foo": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "a": "$foo.a"
        }, 
        "_id": 0
      }
    }, 
    {
      "$unionWith": {
        pipeline: [
          {
            "$documents": [
              {
                "b": {
                  "$literal": 1
                }
              }, 
              {
                "b": {
                  "$literal": 2
                }
              }
            ]
          }, 
          {
            "$project": {
              "arr": "$$ROOT", 
              "_id": 0
            }
          }
        ]
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  ordered: false
  result_set_schema: {
    "additionalProperties": false, 
    "required": [], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "a"
        ], 
        "properties": {
          "a": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }, 
      "arr": {
        "additionalProperties": false, 
        "required": [
          "b"
        ], 
        "properties": {
          "b": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }
    }, 
    "bsonType": "object"
  }

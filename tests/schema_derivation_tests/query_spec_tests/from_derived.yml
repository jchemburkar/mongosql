tests:
- description: both unqualified and qualified references to derived table datasource fields are allowed
  current_db: schema_derivation_from_derived
  pipeline: [
    {
      "$documents": [
        {
          "a": {
            "$literal": 1
          }, 
          "b": {
            "$literal": 1
          }
        }
      ]
    }, 
    {
      "$project": {
        "arr": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "__bot": {
          "bsub": "$arr.b", 
          "asub": "$arr.a"
        }, 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "_id": 0, 
        "derived": "$__bot"
      }
    }, 
    {
      "$project": {
        "__bot": {
          "bsub": "$derived.bsub", 
          "asub": "$derived.asub"
        }, 
        "_id": 0
      }
    }, 
    {
      "$replaceWith": {
        "$unsetField": {
          "field": "__bot", 
          "input": {
            "$setField": {
              "field": "", 
              "value": "$__bot", 
              "input": "$$ROOT"
            }
          }
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [""], 
    "properties": {
      "": {
        "additionalProperties": false, 
        "required": [
          "asub", 
          "bsub"
        ], 
        "properties": {
          "bsub": {
            "bsonType": "int"
          }, 
          "asub": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      },
    }, 
    "bsonType": "object"
  }
- description: there is no ambiguity with one schema-less datasource in a derived table
  current_db: schema_derivation_from_derived
  current_collection: foo
  pipeline: [
    {
      "$project": {
        "foo": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "_id": 0, 
        "derived": "$foo"
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [
      "derived"
    ], 
    "properties": {
      "derived": {
        "additionalProperties": false, 
        "required": [
          "_id", 
          "x", 
          "y"
        ], 
        "properties": {
          "y": {
            "bsonType": "int"
          }, 
          "x": {
            "bsonType": "int"
          }, 
          "_id": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }
    }, 
    "bsonType": "object"
  }
- description: derived table merges namespaces under alias namespace
  current_db: schema_derivation_from_derived
  pipeline: [
    {
      "$documents": [
        {
          "a": {
            "$literal": 1
          }
        }
      ]
    }, 
    {
      "$project": {
        "foo": "$$ROOT", 
        "_id": 0
      }
    }, 
    {
      "$lookup": {
        pipeline: [
          {
            "$documents": [
              {
                "b": {
                  "$literal": 2
                }
              }
            ]
          }, 
          {
            "$project": {
              "_id": 0, 
              "bar": "$$ROOT"
            }
          }
        ], 
        "as": "eca58228-b657-498a-b76e-f48a9161a404"
      }
    }, 
    {
      "$unwind": {
        "path": "$eca58228-b657-498a-b76e-f48a9161a404"
      }
    }, 
    {
      "$replaceWith": {
        "$mergeObjects": [
          "$$ROOT", 
          "$eca58228-b657-498a-b76e-f48a9161a404"
        ]
      }
    }, 
    {
      "$project": {
        "eca58228-b657-498a-b76e-f48a9161a404": 0, 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "foo": "$foo", 
        "bar": "$bar", 
        "_id": 0
      }
    }, 
    {
      "$project": {
        "_id": 0, 
        "derived": {
          "$mergeObjects": [
            "$bar", 
            "$foo"
          ]
        }
      }
    }
  ]
  result_set_schema: {
    "additionalProperties": false, 
    "required": [
      "derived"
    ], 
    "properties": {
      "derived": {
        "additionalProperties": false, 
        "required": [
          "a", 
          "b"
        ], 
        "properties": {
          "a": {
            "bsonType": "int"
          }, 
          "b": {
            "bsonType": "int"
          }
        }, 
        "bsonType": "object"
      }
    }, 
    "bsonType": "object"
  }

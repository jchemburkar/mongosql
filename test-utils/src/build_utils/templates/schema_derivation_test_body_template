#[cfg(feature = "schema_derivation")]
#[test]
// tests with an if statement and a return inside are intended to end early
// before other cases are tested
// for example, if a test should not compile, there's no point in checking
// if the results are correct as there won't be any
pub fn {name}() {{
    use test_utils::*;
    let test_file = initialize_test();
    let test = match test_file {{
        SchemaDerivationYamlTestFile::Single(query_correctness_test) => query_correctness_test,
        SchemaDerivationYamlTestFile::Multiple(spec_query_test) => spec_query_test.tests.get({index}).unwrap()
    }};
    // let catalog = if !no_catalog {{
    //     load_catalog_data(&client, test_file.catalog_data.as_ref().unwrap().clone()).unwrap();

    //     build_catalog_from_catalog_schema(test_file.catalog_schema.as_ref().unwrap().clone()).unwrap()
    // }} else {{
    //     // some query tests don't have a catalog, so we generate a default one
    //     Catalog::default()
    // }};

    let default_db = "test".to_string();
    let db = test
        .current_db
        .as_ref()
        .unwrap_or_else(|| &default_db)
        .to_owned();
    
    // TODO: derive schema here

    // TODO: verify schema staisfaction here
}}
